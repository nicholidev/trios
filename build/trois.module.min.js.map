{"version":3,"file":"trois.module.min.js","sources":["../src/core/useThree.js","../src/core/Renderer.js","../src/tools.js","../src/core/OrthographicCamera.js","../src/core/PerspectiveCamera.js","../src/core/Object3D.js","../src/core/Group.js","../src/core/Scene.js","../src/geometries/Geometry.js","../src/geometries/BoxGeometry.js","../src/geometries/CircleGeometry.js","../src/geometries/ConeGeometry.js","../src/geometries/CylinderGeometry.js","../src/geometries/DodecahedronGeometry.js","../src/geometries/IcosahedronGeometry.js","../src/geometries/LatheGeometry.js","../src/geometries/OctahedronGeometry.js","../src/geometries/PolyhedronGeometry.js","../src/geometries/RingGeometry.js","../src/geometries/SphereGeometry.js","../src/geometries/TetrahedronGeometry.js","../src/geometries/TorusGeometry.js","../src/geometries/TorusKnotGeometry.js","../src/geometries/TubeGeometry.js","../src/lights/Light.js","../src/lights/AmbientLight.js","../src/lights/DirectionalLight.js","../src/lights/HemisphereLight.js","../src/lights/PointLight.js","../src/lights/RectAreaLight.js","../src/lights/SpotLight.js","../src/materials/Material.js","../src/materials/BasicMaterial.js","../src/materials/LambertMaterial.js","../src/materials/MatcapMaterial.js","../src/materials/PhongMaterial.js","../src/materials/StandardMaterial.js","../src/materials/PhysicalMaterial.js","../src/materials/SubsurfaceScatteringShader.js","../src/materials/SubSurfaceMaterial.js","../src/materials/ShaderMaterial.js","../src/materials/ToonMaterial.js","../src/materials/Texture.js","../src/materials/CubeTexture.js","../src/meshes/Mesh.js","../src/meshes/Box.js","../src/meshes/Circle.js","../src/meshes/Cone.js","../src/meshes/Cylinder.js","../src/meshes/Dodecahedron.js","../src/meshes/Icosahedron.js","../src/meshes/Lathe.js","../src/meshes/Octahedron.js","../src/meshes/Plane.js","../src/meshes/Polyhedron.js","../src/meshes/Ring.js","../src/meshes/Sphere.js","../src/meshes/Tetrahedron.js","../src/meshes/TextProps.js","../src/meshes/Text.js","../src/meshes/Torus.js","../src/meshes/TorusKnot.js","../src/meshes/Tube.js","../src/meshes/Gem.js","../src/meshes/Image.js","../src/meshes/InstancedMesh.js","../src/meshes/MirrorMesh.js","../src/meshes/RefractionMesh.js","../src/meshes/Sprite.js","../src/effects/EffectComposer.js","../src/effects/EffectPass.js","../src/effects/RenderPass.js","../src/effects/BokehPass.js","../src/effects/FilmPass.js","../src/effects/FXAAPass.js","../src/effects/HalftonePass.js","../src/effects/SMAAPass.js","../src/shaders/default.js","../src/shaders/TiltShift.js","../src/effects/TiltShiftPass.js","../src/effects/UnrealBloomPass.js","../src/shaders/ZoomBlur.js","../src/effects/ZoomBlurPass.js","../src/plugin.js"],"sourcesContent":["import {\n  Plane,\n  Raycaster,\n  Vector2,\n  Vector3,\n  WebGLRenderer,\n} from 'three';\n\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\n/**\n * Three.js helper\n */\nexport default function useThree() {\n  // default conf\n  const conf = {\n    canvas: null,\n    antialias: true,\n    alpha: false,\n    autoClear: true,\n    orbit_ctrl: false,\n    mouse_move: false,\n    mouse_raycast: false,\n    mouse_over: false,\n    click: false,\n    resize: true,\n    width: 0,\n    height: 0,\n  };\n\n  // size\n  const size = {\n    width: 1, height: 1,\n    wWidth: 1, wHeight: 1,\n    ratio: 1,\n  };\n\n  // handlers\n  const afterInitCallbacks = [];\n  let afterResizeCallbacks = [];\n  let beforeRenderCallbacks = [];\n\n  // mouse tracking\n  const mouse = new Vector2();\n  const mouseV3 = new Vector3();\n  const mousePlane = new Plane(new Vector3(0, 0, 1), 0);\n  const raycaster = new Raycaster();\n\n  // raycast objects\n  const intersectObjects = [];\n\n  // returned object\n  const obj = {\n    conf,\n    renderer: null,\n    camera: null,\n    cameraCtrl: null,\n    materials: {},\n    scene: null,\n    size,\n    mouse, mouseV3,\n    init,\n    dispose,\n    render,\n    renderC,\n    setSize,\n    onAfterInit,\n    onAfterResize, offAfterResize,\n    onBeforeRender, offBeforeRender,\n    addIntersectObject, removeIntersectObject,\n  };\n\n  /**\n   * init three\n   */\n  function init(params) {\n    if (params) {\n      Object.entries(params).forEach(([key, value]) => {\n        conf[key] = value;\n      });\n    }\n\n    if (!obj.scene) {\n      console.error('Missing Scene');\n      return;\n    }\n\n    if (!obj.camera) {\n      console.error('Missing Camera');\n      return;\n    }\n\n    obj.renderer = new WebGLRenderer({ canvas: conf.canvas, antialias: conf.antialias, alpha: conf.alpha });\n    obj.renderer.autoClear = conf.autoClear;\n\n    if (conf.orbit_ctrl) {\n      obj.orbitCtrl = new OrbitControls(obj.camera, obj.renderer.domElement);\n      if (conf.orbit_ctrl instanceof Object) {\n        Object.entries(conf.orbit_ctrl).forEach(([key, value]) => {\n          obj.orbitCtrl[key] = value;\n        });\n      }\n    }\n\n    if (conf.resize) {\n      onResize();\n      window.addEventListener('resize', onResize);\n    } else {\n      setSize(conf.width | 300, conf.height | 150);\n    }\n\n    conf.mouse_move = conf.mouse_move || conf.mouse_over;\n    if (conf.mouse_move) {\n      if (conf.mouse_move === 'body') {\n        obj.mouse_move_element = document.body;\n      } else {\n        obj.mouse_move_element = obj.renderer.domElement;\n      }\n      obj.mouse_move_element.addEventListener('mousemove', onMousemove);\n      obj.mouse_move_element.addEventListener('mouseleave', onMouseleave);\n    }\n\n    if (conf.click) {\n      obj.renderer.domElement.addEventListener('click', onClick);\n    }\n\n    afterInitCallbacks.forEach(c => c());\n\n    return true;\n  };\n\n  /**\n   * add after init callback\n   */\n  function onAfterInit(callback) {\n    afterInitCallbacks.push(callback);\n  }\n\n  /**\n   * add after resize callback\n   */\n  function onAfterResize(callback) {\n    afterResizeCallbacks.push(callback);\n  }\n\n  /**\n   * remove after resize callback\n   */\n  function offAfterResize(callback) {\n    afterResizeCallbacks = afterResizeCallbacks.filter(c => c !== callback);\n  }\n\n  /**\n   * add before render callback\n   */\n  function onBeforeRender(callback) {\n    beforeRenderCallbacks.push(callback);\n  }\n\n  /**\n   * remove before render callback\n   */\n  function offBeforeRender(callback) {\n    beforeRenderCallbacks = beforeRenderCallbacks.filter(c => c !== callback);\n  }\n\n  /**\n   * default render\n   */\n  function render() {\n    if (obj.orbitCtrl) obj.orbitCtrl.update();\n    beforeRenderCallbacks.forEach(c => c());\n    obj.renderer.render(obj.scene, obj.camera);\n  }\n\n  /**\n   * composer render\n   */\n  function renderC() {\n    if (obj.orbitCtrl) obj.orbitCtrl.update();\n    beforeRenderCallbacks.forEach(c => c());\n    obj.composer.render();\n  }\n\n  /**\n   * add intersect object\n   */\n  function addIntersectObject(o) {\n    if (intersectObjects.indexOf(o) === -1) {\n      intersectObjects.push(o);\n    }\n  }\n\n  /**\n   * remove intersect object\n   */\n  function removeIntersectObject(o) {\n    const i = intersectObjects.indexOf(o);\n    if (i !== -1) {\n      intersectObjects.splice(i, 1);\n    }\n  }\n\n  /**\n   * remove listeners\n   */\n  function dispose() {\n    beforeRenderCallbacks = [];\n    window.removeEventListener('resize', onResize);\n    if (obj.mouse_move_element) {\n      obj.mouse_move_element.removeEventListener('mousemove', onMousemove);\n      obj.mouse_move_element.removeEventListener('mouseleave', onMouseleave);\n    }\n    obj.renderer.domElement.removeEventListener('click', onClick);\n    if (obj.orbitCtrl) obj.orbitCtrl.dispose();\n    this.renderer.dispose();\n  }\n\n  /**\n   */\n  function updateMouse(e) {\n    const rect = e.target.getBoundingClientRect();\n    mouse.x = ((e.clientX - rect.left) / size.width) * 2 - 1;\n    mouse.y = -((e.clientY - rect.top) / size.height) * 2 + 1;\n  }\n\n  /**\n   * click listener\n   */\n  function onClick(e) {\n    updateMouse(e);\n    raycaster.setFromCamera(mouse, obj.camera);\n    const objects = raycaster.intersectObjects(intersectObjects);\n    for (let i = 0; i < objects.length; i++) {\n      const o = objects[i].object;\n      if (o.onClick) o.onClick(e);\n    }\n  }\n\n  /**\n   * mousemove listener\n   */\n  function onMousemove(e) {\n    updateMouse(e);\n    onMousechange(e);\n  }\n\n  /**\n   * mouseleave listener\n   */\n  function onMouseleave(e) {\n    // mouse.x = 0;\n    // mouse.y = 0;\n    onMousechange(e);\n  }\n\n  /**\n   * mouse change\n   */\n  function onMousechange(e) {\n    if (conf.mouse_over || conf.mouse_raycast) {\n      raycaster.setFromCamera(mouse, obj.camera);\n\n      if (conf.mouse_raycast) {\n        // get mouse 3d position\n        obj.camera.getWorldDirection(mousePlane.normal);\n        mousePlane.normal.normalize();\n        raycaster.ray.intersectPlane(mousePlane, mouseV3);\n      }\n\n      if (conf.mouse_over) {\n        const onObjects = raycaster.intersectObjects(intersectObjects);\n        const offObjects = [...intersectObjects];\n        for (let i = 0; i < onObjects.length; i++) {\n          const o = onObjects[i].object;\n          if (!o.hover && o.onHover) {\n            o.hover = true;\n            o.onHover(true);\n          }\n          offObjects.splice(offObjects.indexOf(o), 1);\n        }\n        for (let i = 0; i < offObjects.length; i++) {\n          const o = offObjects[i];\n          if (o.hover && o.onHover) {\n            o.hover = false;\n            o.onHover(false);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * resize listener\n   */\n  function onResize() {\n    if (conf.resize === 'window') {\n      setSize(window.innerWidth, window.innerHeight);\n    } else {\n      const elt = obj.renderer.domElement.parentNode;\n      setSize(elt.clientWidth, elt.clientHeight);\n    }\n    afterResizeCallbacks.forEach(c => c());\n  }\n\n  /**\n   * update renderer size and camera\n   */\n  function setSize(width, height) {\n    size.width = width;\n    size.height = height;\n    size.ratio = width / height;\n\n    obj.renderer.setSize(width, height, false);\n    obj.camera.aspect = size.ratio;\n    obj.camera.updateProjectionMatrix();\n\n    if (obj.composer) {\n      obj.composer.setSize(width, height);\n    }\n\n    if (obj.camera.type === 'OrthographicCamera') {\n      size.wWidth = obj.camera.right - obj.camera.left;\n      size.wHeight = obj.camera.top - obj.camera.bottom;\n    } else {\n      const wsize = getCameraSize();\n      size.wWidth = wsize[0]; size.wHeight = wsize[1];\n    }\n  }\n\n  /**\n   * calculate camera visible area size\n   */\n  function getCameraSize() {\n    const vFOV = (obj.camera.fov * Math.PI) / 180;\n    const h = 2 * Math.tan(vFOV / 2) * Math.abs(obj.camera.position.z);\n    const w = h * obj.camera.aspect;\n    return [w, h];\n  }\n\n  return obj;\n}\n","import { h } from 'vue';\nimport useThree from './useThree';\n\nexport default {\n  name: 'Renderer',\n  props: {\n    antialias: Boolean,\n    alpha: Boolean,\n    autoClear: { type: Boolean, default: true },\n    mouseMove: { type: [Boolean, String], default: false },\n    mouseRaycast: { type: Boolean, default: false },\n    mouseOver: { type: Boolean, default: false },\n    click: { type: Boolean, default: false },\n    orbitCtrl: { type: [Boolean, Object], default: false },\n    resize: { type: [Boolean, String], default: false },\n    shadow: Boolean,\n    width: String,\n    height: String,\n  },\n  setup() {\n    return {\n      three: useThree(),\n      raf: true,\n      onMountedCallbacks: [],\n    };\n  },\n  provide() {\n    return {\n      three: this.three,\n      // renderer: this.three.renderer,\n      rendererComponent: this,\n    };\n  },\n  mounted() {\n    const params = {\n      canvas: this.$el,\n      antialias: this.antialias,\n      alpha: this.alpha,\n      autoClear: this.autoClear,\n      orbit_ctrl: this.orbitCtrl,\n      mouse_move: this.mouseMove,\n      mouse_raycast: this.mouseRaycast,\n      mouse_over: this.mouseOver,\n      click: this.click,\n      resize: this.resize,\n      width: this.width,\n      height: this.height,\n    };\n\n    if (this.three.init(params)) {\n      this.renderer = this.three.renderer;\n      this.renderer.shadowMap.enabled = this.shadow;\n      if (this.three.composer) this.animateC();\n      else this.animate();\n    };\n\n    this.onMountedCallbacks.forEach(c => c());\n  },\n  beforeUnmount() {\n    this.raf = false;\n    this.three.dispose();\n  },\n  methods: {\n    onMounted(callback) {\n      this.onMountedCallbacks.push(callback);\n    },\n    onBeforeRender(callback) {\n      this.three.onBeforeRender(callback);\n    },\n    onAfterResize(callback) {\n      this.three.onAfterResize(callback);\n    },\n    animate() {\n      if (this.raf) requestAnimationFrame(this.animate);\n      this.three.render();\n    },\n    animateC() {\n      if (this.raf) requestAnimationFrame(this.animateC);\n      this.three.renderC();\n    },\n  },\n  render() {\n    return h('canvas', {}, this.$slots.default());\n  },\n  __hmrId: 'Renderer',\n};\n","import { toRef, watch } from 'vue';\n\nexport function setFromProp(o, prop) {\n  if (prop instanceof Object) {\n    Object.entries(prop).forEach(([key, value]) => {\n      o[key] = value;\n    });\n  }\n};\n\nexport function bindProp(src, srcProp, dst, dstProp) {\n  if (!dstProp) dstProp = srcProp;\n  const ref = toRef(src, srcProp);\n  if (ref.value instanceof Object) {\n    setFromProp(dst[dstProp], ref.value);\n    watch(ref, (value) => { setFromProp(dst[dstProp], value); }, { deep: true });\n  } else {\n    if (ref.value) dst[dstProp] = src[srcProp];\n    watch(ref, (value) => { dst[dstProp] = value; });\n  }\n};\n\nexport function propsValues(props, exclude) {\n  const values = {};\n  Object.entries(props).forEach(([key, value]) => {\n    if (!exclude || (exclude && !exclude.includes(key))) {\n      values[key] = value;\n    }\n  });\n  return values;\n};\n\nexport function lerp(value1, value2, amount) {\n  amount = amount < 0 ? 0 : amount;\n  amount = amount > 1 ? 1 : amount;\n  return value1 + (value2 - value1) * amount;\n};\n\nexport function lerpv2(v1, v2, amount) {\n  v1.x = lerp(v1.x, v2.x, amount);\n  v1.y = lerp(v1.y, v2.y, amount);\n};\n\nexport function lerpv3(v1, v2, amount) {\n  v1.x = lerp(v1.x, v2.x, amount);\n  v1.y = lerp(v1.y, v2.y, amount);\n  v1.z = lerp(v1.z, v2.z, amount);\n};\n\nexport function limit(val, min, max) {\n  return val < min ? min : (val > max ? max : val);\n};\n\n// from https://github.com/pmndrs/drei/blob/master/src/useMatcapTexture.tsx\nconst MATCAP_ROOT = 'https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d';\n\nexport function getMatcapUrl(hash, format = 1024) {\n  const fileName = `${hash}${getMatcapFormatString(format)}.png`;\n  return `${MATCAP_ROOT}/${format}/${fileName}`;\n};\n\nfunction getMatcapFormatString(format) {\n  switch (format) {\n    case 64:\n      return '-64px';\n    case 128:\n      return '-128px';\n    case 256:\n      return '-256px';\n    case 512:\n      return '-512px';\n    default:\n      return '';\n  }\n}\n","import { OrthographicCamera } from 'three';\nimport { watch } from 'vue';\nimport { bindProp } from '../tools.js';\n\nexport default {\n  name: 'OrthographicCamera',\n  inject: ['three'],\n  props: {\n    left: { type: Number, default: -1 },\n    right: { type: Number, default: 1 },\n    top: { type: Number, default: 1 },\n    bottom: { type: Number, default: -1 },\n    near: { type: Number, default: 0.1 },\n    far: { type: Number, default: 2000 },\n    zoom: { type: Number, default: 1 },\n    position: { type: Object, default: { x: 0, y: 0, z: 0 } },\n  },\n  created() {\n    this.camera = new OrthographicCamera(this.left, this.right, this.top, this.bottom, this.near, this.far);\n    bindProp(this, 'position', this.camera);\n\n    ['left', 'right', 'top', 'bottom', 'near', 'far', 'zoom'].forEach(p => {\n      watch(() => this[p], () => {\n        this.camera[p] = this[p];\n        this.camera.updateProjectionMatrix();\n      });\n    });\n\n    this.three.camera = this.camera;\n  },\n  render() { return []; },\n  __hmrId: 'OrthographicCamera',\n};\n","import { PerspectiveCamera } from 'three';\nimport { watch } from 'vue';\nimport { bindProp } from '../tools.js';\n\nexport default {\n  name: 'PerspectiveCamera',\n  inject: ['three'],\n  props: {\n    aspect: { type: Number, default: 1 },\n    far: { type: Number, default: 2000 },\n    fov: { type: Number, default: 50 },\n    near: { type: Number, default: 0.1 },\n    position: { type: Object, default: { x: 0, y: 0, z: 0 } },\n    lookAt: { type: Object, default: null },\n  },\n  created() {\n    this.camera = new PerspectiveCamera(this.fov, this.aspect, this.near, this.far);\n    bindProp(this, 'position', this.camera);\n\n    if (this.lookAt) this.camera.lookAt(this.lookAt.x, this.lookAt.y, this.lookAt.z);\n    watch(() => this.lookAt, (v) => { this.camera.lookAt(v.x, v.y, v.z); }, { deep: true });\n\n    ['aspect', 'far', 'fov', 'near'].forEach(p => {\n      watch(() => this[p], () => {\n        this.camera[p] = this[p];\n        this.camera.updateProjectionMatrix();\n      });\n    });\n\n    this.three.camera = this.camera;\n  },\n  render() { return []; },\n  __hmrId: 'PerspectiveCamera',\n};\n","import { watch } from 'vue';\nimport { bindProp } from '../tools.js';\n\nexport default {\n  name: 'Object3D',\n  inject: ['three', 'scene', 'rendererComponent'],\n  props: {\n    position: { type: Object, default: { x: 0, y: 0, z: 0 } },\n    rotation: { type: Object, default: { x: 0, y: 0, z: 0 } },\n    scale: { type: Object, default: { x: 1, y: 1, z: 1 } },\n    lookAt: { type: Object, default: null },\n  },\n  // can't use setup because it will not be used in sub components\n  // setup() {},\n  unmounted() {\n    if (this.$parent.remove) this.$parent.remove(this.o3d);\n  },\n  methods: {\n    initObject3D(o3d) {\n      this.o3d = o3d;\n\n      bindProp(this, 'position', this.o3d);\n      bindProp(this, 'rotation', this.o3d);\n      bindProp(this, 'scale', this.o3d);\n\n      // fix lookat.x\n      if (this.lookAt) this.o3d.lookAt(this.lookAt.x, this.lookAt.y, this.lookAt.z);\n      watch(() => this.lookAt, (v) => { this.o3d.lookAt(v.x, v.y, v.z); }, { deep: true });\n\n      if (this.$parent.add) this.$parent.add(this.o3d);\n    },\n    add(o) { this.o3d.add(o); },\n    remove(o) { this.o3d.remove(o); },\n  },\n  render() {\n    return this.$slots.default ? this.$slots.default() : [];\n  },\n  __hmrId: 'Object3D',\n};\n","import { Group } from 'three';\nimport Object3D from './Object3D.js';\n\nexport default {\n  name: 'Group',\n  extends: Object3D,\n  created() {\n    this.group = new Group();\n    this.initObject3D(this.group);\n  },\n  __hmrId: 'Group',\n};\n","import { Scene, Color } from 'three';\nimport { watch } from 'vue';\n\nexport default {\n  name: 'Scene',\n  inject: ['three'],\n  props: {\n    id: String,\n    background: [String, Number],\n  },\n  setup(props) {\n    const scene = new Scene();\n    if (props.background) scene.background = new Color(props.background);\n    watch(() => props.background, (value) => { scene.background = new Color(value); });\n    return { scene };\n  },\n  provide() {\n    return {\n      scene: this.scene,\n    };\n  },\n  mounted() {\n    if (!this.three.scene) {\n      this.three.scene = this.scene;\n    }\n  },\n  methods: {\n    add(o) { this.scene.add(o); },\n    remove(o) { this.scene.remove(o); },\n  },\n  render() {\n    return this.$slots.default ? this.$slots.default() : [];\n  },\n  __hmrId: 'Scene',\n};\n","import { watch } from 'vue';\n\nexport default {\n  inject: ['mesh'],\n  props: {\n    rotateX: Number,\n    rotateY: Number,\n    rotateZ: Number,\n  },\n  created() {\n    if (!this.mesh) {\n      console.error('Missing parent Mesh');\n    }\n\n    this.watchProps = [];\n    Object.entries(this.$props).forEach(e => this.watchProps.push(e[0]));\n\n    this.createGeometry();\n    this.rotateGeometry();\n    this.mesh.setGeometry(this.geometry);\n\n    this.addWatchers();\n  },\n  unmounted() {\n    this.geometry.dispose();\n  },\n  methods: {\n    addWatchers() {\n      this.watchProps.forEach(prop => {\n        watch(() => this[prop], () => {\n          this.refreshGeometry();\n        });\n      });\n    },\n    rotateGeometry() {\n      if (this.rotateX) this.geometry.rotateX(this.rotateX);\n      if (this.rotateY) this.geometry.rotateY(this.rotateY);\n      if (this.rotateZ) this.geometry.rotateZ(this.rotateZ);\n    },\n    refreshGeometry() {\n      const oldGeo = this.geometry;\n      this.createGeometry();\n      this.rotateGeometry();\n      this.mesh.setGeometry(this.geometry);\n      oldGeo.dispose();\n    },\n  },\n  render() { return []; },\n};\n","import { BoxGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    size: Number,\n    width: { type: Number, default: 1 },\n    height: { type: Number, default: 1 },\n    depth: { type: Number, default: 1 },\n    widthSegments: { type: Number, default: 1 },\n    heightSegments: { type: Number, default: 1 },\n    depthSegments: { type: Number, default: 1 },\n  },\n  methods: {\n    createGeometry() {\n      let w = this.width, h = this.height, d = this.depth;\n      if (this.size) {\n        w = this.size; h = this.size; d = this.size;\n      }\n      this.geometry = new BoxGeometry(w, h, d, this.widthSegments, this.heightSegments, this.depthSegments);\n    },\n  },\n};\n","import { CircleGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radius: { type: Number, default: 1 },\n    segments: { type: Number, default: 8 },\n    thetaStart: { type: Number, default: 0 },\n    thetaLength: { type: Number, default: Math.PI * 2 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new CircleGeometry(this.radius, this.segments, this.thetaStart, this.thetaLength);\n    },\n  },\n};\n","import { ConeGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radius: { type: Number, default: 1 },\n    height: { type: Number, default: 1 },\n    radialSegments: { type: Number, default: 8 },\n    heightSegments: { type: Number, default: 1 },\n    openEnded: { type: Boolean, default: false },\n    thetaStart: { type: Number, default: 0 },\n    thetaLength: { type: Number, default: Math.PI * 2 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new ConeGeometry(this.radius, this.height, this.radialSegments, this.heightSegments, this.openEnded, this.thetaStart, this.thetaLength);\n    },\n  },\n};\n","import { CylinderGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radiusTop: { type: Number, default: 1 },\n    radiusBottom: { type: Number, default: 1 },\n    height: { type: Number, default: 1 },\n    radialSegments: { type: Number, default: 8 },\n    heightSegments: { type: Number, default: 1 },\n    openEnded: { type: Boolean, default: false },\n    thetaStart: { type: Number, default: 0 },\n    thetaLength: { type: Number, default: Math.PI * 2 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new CylinderGeometry(this.radiusTop, this.radiusBottom, this.height, this.radialSegments, this.heightSegments, this.openEnded, this.thetaStart, this.thetaLength);\n    },\n  },\n};\n","import { DodecahedronGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new DodecahedronGeometry(this.radius, this.detail);\n    },\n  },\n};\n","import { IcosahedronGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new IcosahedronGeometry(this.radius, this.detail);\n    },\n  },\n};\n","import { LatheGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    points: Array,\n    segments: { type: Number, default: 12 },\n    phiStart: { type: Number, default: 0 },\n    phiLength: { type: Number, default: Math.PI * 2 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new LatheGeometry(this.points, this.segments, this.phiStart, this.phiLength);\n    },\n  },\n};\n","import { OctahedronGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new OctahedronGeometry(this.radius, this.detail);\n    },\n  },\n};\n","import { PolyhedronGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    vertices: Array,\n    indices: Array,\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new PolyhedronGeometry(this.vertices, this.indices, this.radius, this.detail);\n    },\n  },\n};\n","import { RingGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    innerRadius: { type: Number, default: 0.5 },\n    outerRadius: { type: Number, default: 1 },\n    thetaSegments: { type: Number, default: 8 },\n    phiSegments: { type: Number, default: 1 },\n    thetaStart: { type: Number, default: 0 },\n    thetaLength: { type: Number, default: Math.PI * 2 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new RingGeometry(this.innerRadius, this.outerRadius, this.thetaSegments, this.phiSegments, this.thetaStart, this.thetaLength);\n    },\n  },\n};\n","import { SphereGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radius: { type: Number, default: 1 },\n    widthSegments: { type: Number, default: 12 },\n    heightSegments: { type: Number, default: 12 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new SphereGeometry(this.radius, this.widthSegments, this.heightSegments);\n    },\n  },\n};\n","import { TetrahedronGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new TetrahedronGeometry(this.radius, this.detail);\n    },\n  },\n};\n","import { TorusGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radius: { type: Number, default: 1 },\n    tube: { type: Number, default: 0.4 },\n    radialSegments: { type: Number, default: 8 },\n    tubularSegments: { type: Number, default: 6 },\n    arc: { type: Number, default: Math.PI * 2 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new TorusGeometry(this.radius, this.tube, this.radialSegments, this.tubularSegments, this.arc);\n    },\n  },\n};\n","import { TorusKnotGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radius: { type: Number, default: 1 },\n    tube: { type: Number, default: 0.4 },\n    radialSegments: { type: Number, default: 64 },\n    tubularSegments: { type: Number, default: 8 },\n    p: { type: Number, default: 2 },\n    q: { type: Number, default: 3 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new TorusKnotGeometry(this.radius, this.tube, this.radialSegments, this.tubularSegments, this.p, this.q);\n    },\n  },\n};\n","import { Curve, TubeGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    path: Curve,\n    tubularSegments: { type: Number, default: 64 },\n    radius: { type: Number, default: 1 },\n    radiusSegments: { type: Number, default: 8 },\n    closed: { type: Boolean, default: false },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new TubeGeometry(this.path, this.tubularSegments, this.radius, this.radiusSegments, this.closed);\n    },\n  },\n};\n","import { Color } from 'three';\nimport { watch } from 'vue';\nimport Object3D from '../core/Object3D.js';\nimport { bindProp, setFromProp } from '../tools.js';\n\nexport default {\n  extends: Object3D,\n  name: 'Light',\n  props: {\n    color: { type: String, default: '#ffffff' },\n    intensity: { type: Number, default: 1 },\n    castShadow: { type: Boolean, default: false },\n    shadowMapSize: { type: Object, default: { x: 512, y: 512 } },\n  },\n  // can't use setup because it will not be used in sub components\n  // setup() {},\n  unmounted() {\n    if (this.light.target) this.$parent.remove(this.light.target);\n  },\n  methods: {\n    initLight() {\n      if (this.light.target) {\n        bindProp(this, 'target', this.light.target, 'position');\n      }\n\n      if (this.light.shadow) {\n        this.light.castShadow = this.castShadow;\n        setFromProp(this.light.shadow.mapSize, this.shadowMapSize);\n      }\n\n      ['color', 'intensity', 'castShadow'].forEach(p => {\n        watch(() => this[p], () => {\n          if (p === 'color') {\n            this.light.color = new Color(this.color);\n          } else {\n            this.light[p] = this[p];\n          }\n        });\n      });\n\n      this.initObject3D(this.light);\n      if (this.light.target) this.$parent.add(this.light.target);\n    },\n  },\n  __hmrId: 'Light',\n};\n","import { AmbientLight } from 'three';\nimport Light from './Light.js';\n\nexport default {\n  extends: Light,\n  created() {\n    this.light = new AmbientLight(this.color, this.intensity);\n    this.initLight();\n  },\n  __hmrId: 'AmbientLight',\n};\n","import { DirectionalLight } from 'three';\nimport Light from './Light.js';\n\nexport default {\n  extends: Light,\n  props: {\n    target: Object,\n  },\n  created() {\n    this.light = new DirectionalLight(this.color, this.intensity);\n    this.initLight();\n  },\n  __hmrId: 'DirectionalLight',\n};\n","import { HemisphereLight } from 'three';\nimport Light from './Light.js';\nimport { bindProp } from '../tools.js';\n\nexport default {\n  extends: Light,\n  props: {\n    groundColor: { type: String, default: '#ffffff' },\n  },\n  created() {\n    this.light = new HemisphereLight(this.color, this.groundColor, this.intensity);\n    bindProp(this, 'groundColor', this.light);\n    this.initLight();\n  },\n  __hmrId: 'HemisphereLight',\n};\n","import { PointLight } from 'three';\nimport Light from './Light.js';\n\nexport default {\n  extends: Light,\n  props: {\n    distance: {\n      type: Number,\n      default: 0,\n    },\n    decay: {\n      type: Number,\n      default: 1,\n    },\n  },\n  created() {\n    this.light = new PointLight(this.color, this.intensity, this.distance, this.decay);\n    this.initLight();\n  },\n  __hmrId: 'PointLight',\n};\n","import { RectAreaLight } from 'three';\nimport { RectAreaLightUniformsLib } from 'three/examples/jsm/lights/RectAreaLightUniformsLib.js';\nimport { RectAreaLightHelper } from 'three/examples/jsm/helpers/RectAreaLightHelper.js';\nimport { watch } from 'vue';\nimport Light from './Light.js';\n\nexport default {\n  extends: Light,\n  props: {\n    width: { type: Number, default: 10 },\n    height: { type: Number, default: 10 },\n    helper: Boolean,\n  },\n  created() {\n    RectAreaLightUniformsLib.init();\n    this.light = new RectAreaLight(this.color, this.intensity, this.width, this.height);\n\n    ['width', 'height'].forEach(p => {\n      watch(() => this[p], () => {\n        this.light[p] = this[p];\n      });\n    });\n\n    if (this.helper) {\n      this.lightHelper = new RectAreaLightHelper(this.light);\n      this.$parent.add(this.lightHelper);\n    }\n\n    this.initLight();\n  },\n  unmounted() {\n    if (this.lightHelper) this.$parent.remove(this.lightHelper);\n  },\n  __hmrId: 'RectAreaLight',\n};\n","import { SpotLight } from 'three';\nimport { watch } from 'vue';\nimport Light from './Light.js';\n\nexport default {\n  extends: Light,\n  props: {\n    angle: { type: Number, default: Math.PI / 3 },\n    decay: { type: Number, default: 1 },\n    distance: { type: Number, default: 0 },\n    penumbra: { type: Number, default: 0 },\n    target: Object,\n  },\n  created() {\n    this.light = new SpotLight(this.color, this.intensity, this.distance, this.angle, this.penumbra, this.decay);\n    ['angle', 'decay', 'distance', 'penumbra'].forEach(p => {\n      watch(() => this[p], () => {\n        this.light[p] = this[p];\n      });\n    });\n    this.initLight();\n  },\n  __hmrId: 'SpotLight',\n};\n","import { watch } from 'vue';\nimport { FrontSide } from 'three';\n\nexport default {\n  inject: ['three', 'mesh'],\n  props: {\n    color: { type: [String, Number], default: '#ffffff' },\n    depthTest: { type: Boolean, default: true },\n    depthWrite: { type: Boolean, default: true },\n    flatShading: Boolean,\n    fog: { type: Boolean, default: true },\n    opacity: { type: Number, default: 1 },\n    side: { type: Number, default: FrontSide },\n    transparent: Boolean,\n    vertexColors: Boolean,\n  },\n  provide() {\n    return {\n      material: this,\n    };\n  },\n  created() {\n    this.createMaterial();\n    this.mesh.setMaterial(this.material);\n\n    this._addWatchers();\n    if (this.addWatchers) this.addWatchers();\n  },\n  unmounted() {\n    this.material.dispose();\n  },\n  methods: {\n    setProp(key, value, needsUpdate = false) {\n      this.material[key] = value;\n      this.material.needsUpdate = needsUpdate;\n    },\n    setTexture(texture, key = 'map') {\n      this.setProp(key, texture, true);\n    },\n    _addWatchers() {\n      // don't work for flatShading\n      ['color', 'depthTest', 'depthWrite', 'fog', 'opacity', 'side', 'transparent'].forEach(p => {\n        watch(() => this[p], () => {\n          if (p === 'color') {\n            this.material.color.set(this.color);\n          } else {\n            this.material[p] = this[p];\n          }\n        });\n      });\n    },\n  },\n  render() {\n    return this.$slots.default ? this.$slots.default() : [];\n  },\n  __hmrId: 'Material',\n};\n","import { MeshBasicMaterial } from 'three';\nimport { propsValues } from '../tools.js';\nimport Material from './Material';\n\nexport default {\n  extends: Material,\n  methods: {\n    createMaterial() {\n      this.material = new MeshBasicMaterial(propsValues(this.$props));\n    },\n  },\n  __hmrId: 'BasicMaterial',\n};\n","import { MeshLambertMaterial } from 'three';\nimport { propsValues } from '../tools.js';\nimport Material from './Material';\n\nexport default {\n  extends: Material,\n  methods: {\n    createMaterial() {\n      this.material = new MeshLambertMaterial(propsValues(this.$props));\n    },\n  },\n  __hmrId: 'LambertMaterial',\n};\n","import { MeshMatcapMaterial, TextureLoader } from 'three';\n// import { watch } from 'vue';\nimport { propsValues, getMatcapUrl } from '../tools.js';\nimport Material from './Material';\n\nexport default {\n  extends: Material,\n  props: {\n    src: String,\n    name: String,\n  },\n  methods: {\n    createMaterial() {\n      const src = this.name ? getMatcapUrl(this.name) : this.src;\n      const opts = propsValues(this.$props, ['src', 'name']);\n      opts.matcap = new TextureLoader().load(src);\n      this.material = new MeshMatcapMaterial(opts);\n    },\n  },\n  __hmrId: 'MatcapMaterial',\n};\n","import { MeshPhongMaterial } from 'three';\nimport { watch } from 'vue';\nimport { propsValues } from '../tools.js';\nimport Material from './Material';\n\nexport default {\n  extends: Material,\n  props: {\n    emissive: { type: [Number, String], default: 0 },\n    emissiveIntensity: { type: Number, default: 1 },\n    reflectivity: { type: Number, default: 1 },\n    shininess: { type: Number, default: 30 },\n    specular: { type: [String, Number], default: 0x111111 },\n  },\n  methods: {\n    createMaterial() {\n      this.material = new MeshPhongMaterial(propsValues(this.$props));\n    },\n    addWatchers() {\n      ['emissive', 'emissiveIntensity', 'reflectivity', 'shininess', 'specular'].forEach(p => {\n        watch(() => this[p], (value) => {\n          if (p === 'emissive' || p === 'specular') {\n            this.material[p].set(value);\n          } else {\n            this.material[p] = value;\n          }\n        });\n      });\n    },\n  },\n  __hmrId: 'PhongMaterial',\n};\n","import { MeshStandardMaterial } from 'three';\nimport { watch } from 'vue';\nimport { bindProp, propsValues } from '../tools.js';\nimport Material from './Material';\n\nconst props = {\n  aoMapIntensity: { type: Number, default: 1 },\n  bumpScale: { type: Number, default: 1 },\n  displacementBias: { type: Number, default: 0 },\n  displacementScale: { type: Number, default: 1 },\n  emissive: { type: [Number, String], default: 0 },\n  emissiveIntensity: { type: Number, default: 1 },\n  envMapIntensity: { type: Number, default: 1 },\n  lightMapIntensity: { type: Number, default: 1 },\n  metalness: { type: Number, default: 0 },\n  normalScale: { type: Object, default: { x: 1, y: 1 } },\n  roughness: { type: Number, default: 1 },\n  refractionRatio: { type: Number, default: 0.98 },\n  wireframe: Boolean,\n};\n\nexport default {\n  extends: Material,\n  props,\n  methods: {\n    createMaterial() {\n      this.material = new MeshStandardMaterial(propsValues(this.$props, ['normalScale']));\n    },\n    addWatchers() {\n      // todo : use setProp ?\n      Object.keys(props).forEach(p => {\n        if (p === 'normalScale') return;\n        watch(() => this[p], (value) => {\n          if (p === 'emissive') {\n            this.material[p].set(value);\n          } else {\n            this.material[p] = value;\n          }\n        });\n      });\n      bindProp(this, 'normalScale', this.material);\n    },\n  },\n  __hmrId: 'StandardMaterial',\n};\n","import { MeshPhysicalMaterial } from 'three';\nimport { propsValues } from '../tools.js';\nimport StandardMaterial from './StandardMaterial';\n\nexport default {\n  extends: StandardMaterial,\n  methods: {\n    createMaterial() {\n      this.material = new MeshPhysicalMaterial(propsValues(this.$props));\n    },\n  },\n  __hmrId: 'PhysicalMaterial',\n};\n","/**\n * ------------------------------------------------------------------------------------------\n * Subsurface Scattering shader\n * Based on three/examples/jsm/shaders/SubsurfaceScatteringShader.js\n * Based on GDC 2011 – Approximating Translucency for a Fast, Cheap and Convincing Subsurface Scattering Look\n * https://colinbarrebrisebois.com/2011/03/07/gdc-2011-approximating-translucency-for-a-fast-cheap-and-convincing-subsurface-scattering-look/\n *------------------------------------------------------------------------------------------\n */\nimport {\n  Color,\n  ShaderChunk,\n  ShaderLib,\n  UniformsUtils,\n} from 'three';\n\nfunction replaceAll(string, find, replace) {\n  return string.split(find).join(replace);\n}\n\nconst meshphongFragHead = ShaderChunk.meshphong_frag.slice(0, ShaderChunk.meshphong_frag.indexOf('void main() {'));\nconst meshphongFragBody = ShaderChunk.meshphong_frag.slice(ShaderChunk.meshphong_frag.indexOf('void main() {'));\n\nconst SubsurfaceScatteringShader = {\n\n  uniforms: UniformsUtils.merge([\n    ShaderLib.phong.uniforms,\n    {\n      thicknessColor: { value: new Color(0x668597) },\n      thicknessDistortion: { value: 0.1 },\n      thicknessAmbient: { value: 0.0 },\n      thicknessAttenuation: { value: 0.1 },\n      thicknessPower: { value: 2.0 },\n      thicknessScale: { value: 10.0 },\n    },\n  ]),\n\n  vertexShader: `\n    #define USE_UV\n    ${ShaderChunk.meshphong_vert}\n  `,\n\n  fragmentShader: `\n    #define USE_UV\n    #define SUBSURFACE\n\n    ${meshphongFragHead}\n\n    uniform float thicknessPower;\n    uniform float thicknessScale;\n    uniform float thicknessDistortion;\n    uniform float thicknessAmbient;\n    uniform float thicknessAttenuation;\n    uniform vec3 thicknessColor;\n\n    void RE_Direct_Scattering(const in IncidentLight directLight, const in vec2 uv, const in GeometricContext geometry, inout ReflectedLight reflectedLight) {\n      #ifdef USE_COLOR\n        vec3 thickness = vColor * thicknessColor;\n      #else\n        vec3 thickness = thicknessColor;\n      #endif\n      vec3 scatteringHalf = normalize(directLight.direction + (geometry.normal * thicknessDistortion));\n      float scatteringDot = pow(saturate(dot(geometry.viewDir, -scatteringHalf)), thicknessPower) * thicknessScale;\n      vec3 scatteringIllu = (scatteringDot + thicknessAmbient) * thickness;\n      reflectedLight.directDiffuse += scatteringIllu * thicknessAttenuation * directLight.color;\n    }\n  ` + meshphongFragBody.replace(\n    '#include <lights_fragment_begin>',\n    replaceAll(\n      ShaderChunk.lights_fragment_begin,\n      'RE_Direct( directLight, geometry, material, reflectedLight );',\n      `\n        RE_Direct( directLight, geometry, material, reflectedLight );\n        #if defined( SUBSURFACE ) && defined( USE_UV )\n          RE_Direct_Scattering(directLight, vUv, geometry, reflectedLight);\n        #endif\n      `\n    )\n  ),\n};\n\nexport default SubsurfaceScatteringShader;\n","import { Color, ShaderMaterial as TShaderMaterial, UniformsUtils } from 'three';\nimport SubsurfaceScatteringShader from './SubsurfaceScatteringShader.js';\nimport ShaderMaterial from './ShaderMaterial';\n\nexport default {\n  extends: ShaderMaterial,\n  props: {\n    color: { type: String, default: '#ffffff' },\n    thicknessColor: { type: String, default: '#ffffff' },\n    thicknessDistortion: { type: Number, default: 0.4 },\n    thicknessAmbient: { type: Number, default: 0.01 },\n    thicknessAttenuation: { type: Number, default: 0.7 },\n    thicknessPower: { type: Number, default: 2 },\n    thicknessScale: { type: Number, default: 4 },\n    transparent: { type: Boolean, default: false },\n    opacity: { type: Number, default: 1 },\n    vertexColors: { type: Boolean, default: false },\n  },\n  methods: {\n    createMaterial() {\n      const params = SubsurfaceScatteringShader;\n      const uniforms = UniformsUtils.clone(params.uniforms);\n\n      Object.entries(this.$props).forEach(([key, value]) => {\n        let _key = key, _value = value;\n        if (['color', 'thicknessColor'].includes(key)) {\n          if (key === 'color') _key = 'diffuse';\n          _value = new Color(value);\n        }\n        if (!['transparent', 'vertexColors'].includes(key)) {\n          uniforms[_key].value = _value;\n        }\n      });\n\n      this.material = new TShaderMaterial({\n        ...params,\n        uniforms,\n        lights: true,\n        transparent: this.transparent,\n        vertexColors: this.vertexColors,\n      });\n    },\n  },\n  __hmrId: 'SubSurfaceMaterial',\n};\n","export default {\n  inject: ['three', 'mesh'],\n  props: {\n    uniforms: Object,\n    vertexShader: String,\n    fragmentShader: String,\n  },\n  created() {\n    this.createMaterial();\n    this.mesh.setMaterial(this.material);\n    if (this.addWatchers) this.addWatchers();\n  },\n  unmounted() {\n    this.material.dispose();\n  },\n  render() {\n    return [];\n  },\n  __hmrId: 'ShaderMaterial',\n};\n","import { MeshToonMaterial } from 'three';\nimport { propsValues } from '../tools.js';\nimport Material from './Material';\n\nexport default {\n  extends: Material,\n  methods: {\n    createMaterial() {\n      this.material = new MeshToonMaterial(propsValues(this.$props));\n    },\n  },\n  __hmrId: 'ToonMaterial',\n};\n","import { ClampToEdgeWrapping, LinearFilter, LinearMipmapLinearFilter, TextureLoader, UVMapping } from 'three';\nimport { watch } from 'vue';\nimport { bindProp } from '../tools.js';\n\nexport default {\n  inject: ['material'],\n  emits: ['loaded'],\n  props: {\n    id: { type: String, default: 'map' },\n    src: String,\n    onLoad: Function,\n    onProgress: Function,\n    onError: Function,\n    mapping: { type: Number, default: UVMapping },\n    wrapS: { type: Number, default: ClampToEdgeWrapping },\n    wrapT: { type: Number, default: ClampToEdgeWrapping },\n    magFilter: { type: Number, default: LinearFilter },\n    minFilter: { type: Number, default: LinearMipmapLinearFilter },\n    repeat: { type: Object, default: { x: 1, y: 1 } },\n    rotation: { type: Number, default: 0 },\n    center: { type: Object, default: { x: 0, y: 0 } },\n  },\n  created() {\n    this.refreshTexture();\n    watch(() => this.src, this.refreshTexture);\n  },\n  unmounted() {\n    this.material.setTexture(null, this.id);\n    this.texture.dispose();\n  },\n  methods: {\n    createTexture() {\n      this.texture = new TextureLoader().load(this.src, this.onLoaded, this.onProgress, this.onError);\n      const wathProps = ['mapping', 'wrapS', 'wrapT', 'magFilter', 'minFilter', 'repeat', 'rotation', 'rotation', 'center'];\n      wathProps.forEach(prop => {\n        bindProp(this, prop, this.texture);\n      });\n    },\n    refreshTexture() {\n      this.createTexture();\n      this.material.setTexture(this.texture, this.id);\n    },\n    onLoaded() {\n      if (this.onLoad) this.onLoad();\n      this.$emit('loaded');\n    },\n  },\n  render() { return []; },\n};\n","import { CubeTextureLoader, CubeRefractionMapping } from 'three';\nimport { watch } from 'vue';\n\nexport default {\n  inject: ['material'],\n  emits: ['loaded'],\n  props: {\n    path: String,\n    urls: {\n      type: Array,\n      default: ['px.jpg', 'nx.jpg', 'py.jpg', 'ny.jpg', 'pz.jpg', 'nz.jpg'],\n    },\n    onLoad: Function,\n    onProgress: Function,\n    onError: Function,\n    id: { type: String, default: 'envMap' },\n    refraction: Boolean,\n    // todo: remove ?\n    refractionRatio: { type: Number, default: 0.98 },\n  },\n  created() {\n    this.refreshTexture();\n    watch(() => this.path, this.refreshTexture);\n    watch(() => this.urls, this.refreshTexture);\n  },\n  unmounted() {\n    this.material.setTexture(null, this.id);\n    this.texture.dispose();\n  },\n  methods: {\n    createTexture() {\n      this.texture = new CubeTextureLoader()\n        .setPath(this.path)\n        .load(this.urls, this.onLoaded, this.onProgress, this.onError);\n    },\n    refreshTexture() {\n      this.createTexture();\n      this.material.setTexture(this.texture, this.id);\n      if (this.refraction) {\n        this.texture.mapping = CubeRefractionMapping;\n        this.material.setProp('refractionRatio', this.refractionRatio);\n      }\n    },\n    onLoaded() {\n      if (this.onLoad) this.onLoad();\n      this.$emit('loaded');\n    },\n  },\n  render() {\n    return [];\n  },\n};\n","import { watch } from 'vue';\nimport { Mesh } from 'three';\nimport Object3D from '../core/Object3D.js';\n\nexport default {\n  extends: Object3D,\n  name: 'Mesh',\n  props: {\n    castShadow: Boolean,\n    receiveShadow: Boolean,\n    onHover: Function,\n    onClick: Function,\n  },\n  // can't use setup because it will not be used in sub components\n  // setup() {},\n  provide() {\n    return {\n      mesh: this,\n    };\n  },\n  mounted() {\n    if (!this.mesh && !this.loading) this.initMesh();\n  },\n  methods: {\n    initMesh() {\n      this.mesh = new Mesh(this.geometry, this.material);\n\n      ['castShadow', 'receiveShadow'].forEach(p => {\n        this.mesh[p] = this[p];\n        watch(() => this[p], () => { this.mesh[p] = this[p]; });\n      });\n\n      if (this.onHover) {\n        this.mesh.onHover = (over) => { this.onHover({ component: this, over }); };\n        this.three.addIntersectObject(this.mesh);\n      }\n\n      if (this.onClick) {\n        this.mesh.onClick = (e) => { this.onClick({ component: this, event: e }); };\n        this.three.addIntersectObject(this.mesh);\n      }\n\n      this.initObject3D(this.mesh);\n    },\n    setGeometry(geometry) {\n      this.geometry = geometry;\n      if (this.mesh) this.mesh.geometry = geometry;\n    },\n    setMaterial(material) {\n      this.material = material;\n      if (this.mesh) this.mesh.material = material;\n    },\n    refreshGeometry() {\n      const oldGeo = this.geometry;\n      this.createGeometry();\n      this.mesh.geometry = this.geometry;\n      oldGeo.dispose();\n    },\n  },\n  unmounted() {\n    if (this.mesh) {\n      this.three.removeIntersectObject(this.mesh);\n    }\n    // for predefined mesh (geometry and material are not unmounted)\n    if (this.geometry) this.geometry.dispose();\n    if (this.material) this.material.dispose();\n  },\n  __hmrId: 'Mesh',\n};\n","import { BoxBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    size: Number,\n    width: { type: Number, default: 1 },\n    height: { type: Number, default: 1 },\n    depth: { type: Number, default: 1 },\n    widthSegments: { type: Number, default: 1 },\n    heightSegments: { type: Number, default: 1 },\n    depthSegments: { type: Number, default: 1 },\n  },\n  created() {\n    this.createGeometry();\n\n    ['size', 'width', 'height', 'depth', 'widthSegments', 'heightSegments', 'depthSegments'].forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      if (this.size) {\n        this.geometry = new BoxBufferGeometry(this.size, this.size, this.size);\n      } else {\n        this.geometry = new BoxBufferGeometry(this.width, this.height, this.depth);\n      }\n    },\n  },\n  __hmrId: 'Box',\n};\n","import { CircleBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radius: { type: Number, default: 1 },\n    segments: { type: Number, default: 8 },\n    thetaStart: { type: Number, default: 0 },\n    thetaLength: { type: Number, default: Math.PI * 2 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['radius', 'segments', 'thetaStart', 'thetaLength'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new CircleBufferGeometry(this.radius, this.segments, this.thetaStart, this.thetaLength);\n    },\n  },\n  __hmrId: 'Circle',\n};\n","import { ConeBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radius: { type: Number, default: 1 },\n    height: { type: Number, default: 1 },\n    radialSegments: { type: Number, default: 8 },\n    heightSegments: { type: Number, default: 1 },\n    openEnded: { type: Boolean, default: false },\n    thetaStart: { type: Number, default: 0 },\n    thetaLength: { type: Number, default: Math.PI * 2 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['radius', 'height', 'radialSegments', 'heightSegments', 'openEnded', 'thetaStart', 'thetaLength'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new ConeBufferGeometry(this.radius, this.height, this.radialSegments, this.heightSegments, this.openEnded, this.thetaStart, this.thetaLength);\n    },\n  },\n  __hmrId: 'Cone',\n};\n","import { CylinderBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radiusTop: { type: Number, default: 1 },\n    radiusBottom: { type: Number, default: 1 },\n    height: { type: Number, default: 1 },\n    radialSegments: { type: Number, default: 8 },\n    heightSegments: { type: Number, default: 1 },\n    openEnded: { type: Boolean, default: false },\n    thetaStart: { type: Number, default: 0 },\n    thetaLength: { type: Number, default: Math.PI * 2 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['radiusTop', 'radiusBottom', 'height', 'radialSegments', 'heightSegments', 'openEnded', 'thetaStart', 'thetaLength'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new CylinderBufferGeometry(this.radiusTop, this.radiusBottom, this.height, this.radialSegments, this.heightSegments, this.openEnded, this.thetaStart, this.thetaLength);\n    },\n  },\n  __hmrId: 'Cylinder',\n};\n","import { DodecahedronBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['radius', 'detail'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new DodecahedronBufferGeometry(this.radius, this.detail);\n    },\n  },\n  __hmrId: 'Dodecahedron',\n};\n","import { IcosahedronBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['radius', 'detail'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new IcosahedronBufferGeometry(this.radius, this.detail);\n    },\n  },\n  __hmrId: 'Icosahedron',\n};\n","import { LatheBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    points: Array,\n    segments: { type: Number, default: 12 },\n    phiStart: { type: Number, default: 0 },\n    phiLength: { type: Number, default: Math.PI * 2 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['points', 'segments', 'phiStart', 'phiLength'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new LatheBufferGeometry(this.points, this.segments, this.phiStart, this.phiLength);\n    },\n  },\n  __hmrId: 'Lathe',\n};\n","import { OctahedronBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['radius', 'detail'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new OctahedronBufferGeometry(this.radius, this.detail);\n    },\n  },\n  __hmrId: 'Octahedron',\n};\n","import { PlaneBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    width: { type: Number, default: 1 },\n    height: { type: Number, default: 1 },\n    widthSegments: { type: Number, default: 1 },\n    heightSegments: { type: Number, default: 1 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['width', 'height', 'widthSegments', 'heightSegments'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n    },\n  },\n  __hmrId: 'Plane',\n};\n","import { PolyhedronBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    vertices: Array,\n    indices: Array,\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['vertices', 'indices', 'radius', 'detail'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new PolyhedronBufferGeometry(this.vertices, this.indices, this.radius, this.detail);\n    },\n  },\n  __hmrId: 'Polyhedron',\n};\n","import { RingBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    innerRadius: { type: Number, default: 0.5 },\n    outerRadius: { type: Number, default: 1 },\n    thetaSegments: { type: Number, default: 8 },\n    phiSegments: { type: Number, default: 1 },\n    thetaStart: { type: Number, default: 0 },\n    thetaLength: { type: Number, default: Math.PI * 2 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['innerRadius', 'outerRadius', 'thetaSegments', 'phiSegments', 'thetaStart', 'thetaLength'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new RingBufferGeometry(this.innerRadius, this.outerRadius, this.thetaSegments, this.phiSegments, this.thetaStart, this.thetaLength);\n    },\n  },\n  __hmrId: 'Ring',\n};\n","import { SphereBufferGeometry } from 'three';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radius: Number,\n    widthSegments: { type: Number, default: 12 },\n    heightSegments: { type: Number, default: 12 },\n  },\n  watch: {\n    radius() { this.refreshGeometry(); },\n    widthSegments() { this.refreshGeometry(); },\n    heightSegments() { this.refreshGeometry(); },\n  },\n  created() {\n    this.createGeometry();\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new SphereBufferGeometry(this.radius, this.widthSegments, this.heightSegments);\n    },\n  },\n  __hmrId: 'Sphere',\n};\n","import { TetrahedronBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['radius', 'detail'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new TetrahedronBufferGeometry(this.radius, this.detail);\n    },\n  },\n  __hmrId: 'Tetrahedron',\n};\n","export default {\n  text: String,\n  fontSrc: String,\n  size: { type: Number, default: 80 },\n  height: { type: Number, default: 5 },\n  depth: { type: Number, default: 1 },\n  curveSegments: { type: Number, default: 12 },\n  bevelEnabled: { type: Boolean, default: false },\n  bevelThickness: { type: Number, default: 10 },\n  bevelSize: { type: Number, default: 8 },\n  bevelOffset: { type: Number, default: 0 },\n  bevelSegments: { type: Number, default: 5 },\n  align: { type: [Boolean, String], default: false },\n};\n","import { FontLoader, TextBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\nimport TextProps from './TextProps.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    ...TextProps,\n  },\n  data() {\n    return {\n      loading: true,\n    };\n  },\n  created() {\n    // add watchers\n    const watchProps = [\n      'text', 'size', 'height', 'curveSegments',\n      'bevelEnabled', 'bevelThickness', 'bevelSize', 'bevelOffset', 'bevelSegments',\n      'align',\n    ];\n    watchProps.forEach(p => {\n      watch(() => this[p], () => {\n        if (this.font) this.refreshGeometry();\n      });\n    });\n\n    const loader = new FontLoader();\n    loader.load(this.fontSrc, (font) => {\n      this.loading = false;\n      this.font = font;\n      this.createGeometry();\n      this.initMesh();\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new TextBufferGeometry(this.text, {\n        font: this.font,\n        size: this.size,\n        height: this.height,\n        depth: this.depth,\n        curveSegments: this.curveSegments,\n        bevelEnabled: this.bevelEnabled,\n        bevelThickness: this.bevelThickness,\n        bevelSize: this.bevelSize,\n        bevelOffset: this.bevelOffset,\n        bevelSegments: this.bevelSegments,\n      });\n\n      if (this.align === 'center') {\n        this.geometry.center();\n      }\n    },\n  },\n};\n","import { TorusBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radius: { type: Number, default: 0.5 },\n    tube: { type: Number, default: 0.4 },\n    radialSegments: { type: Number, default: 8 },\n    tubularSegments: { type: Number, default: 6 },\n    arc: { type: Number, default: Math.PI * 2 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['radius', 'tube', 'radialSegments', 'tubularSegments', 'arc'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new TorusBufferGeometry(this.radius, this.tube, this.radialSegments, this.tubularSegments, this.arc);\n    },\n  },\n  __hmrId: 'Torus',\n};\n","import { TorusKnotBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radius: { type: Number, default: 0.5 },\n    tube: { type: Number, default: 0.4 },\n    tubularSegments: { type: Number, default: 64 },\n    radialSegments: { type: Number, default: 8 },\n    p: { type: Number, default: 2 },\n    q: { type: Number, default: 3 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['radius', 'tube', 'radialSegments', 'tubularSegments', 'p', 'q'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new TorusKnotBufferGeometry(this.radius, this.tube, this.tubularSegments, this.radialSegments, this.p, this.q);\n    },\n  },\n  __hmrId: 'TorusKnot',\n};\n","import { CatmullRomCurve3, Curve, TubeGeometry, Vector3 } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    path: Curve,\n    points: Array,\n    tubularSegments: { type: Number, default: 64 },\n    radius: { type: Number, default: 1 },\n    radialSegments: { type: Number, default: 8 },\n    closed: { type: Boolean, default: false },\n  },\n  created() {\n    this.createGeometry();\n    const watchProps = ['tubularSegments', 'radius', 'radialSegments', 'closed'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], (v) => {\n        this.refreshGeometry();\n      });\n    });\n    watch(() => this.points, () => {\n      updateTubeGeometryPoints(this.geometry, this.points);\n    });\n  },\n  methods: {\n    createGeometry() {\n      let curve;\n      if (this.points) {\n        curve = new CatmullRomCurve3(this.points);\n      } else if (this.path) {\n        curve = this.path;\n      } else {\n        console.error('Missing path curve or points.');\n      }\n      this.geometry = new TubeGeometry(curve, this.tubularSegments, this.radius, this.radialSegments, this.closed);\n    },\n    // update curve points (without using prop, faster)\n    updateCurve(points) {\n      updateTubeGeometryPoints(this.geometry, points);\n    },\n  },\n  __hmrId: 'Tube',\n};\n\nfunction updateTubeGeometryPoints(tube, points) {\n  const curve = new CatmullRomCurve3(points);\n  const { radialSegments, radius, tubularSegments, closed } = tube.parameters;\n  const frames = curve.computeFrenetFrames(tubularSegments, closed);\n  tube.tangents = frames.tangents;\n  tube.normals = frames.normals;\n  tube.binormals = frames.binormals;\n  tube.parameters.path = curve;\n\n  const pArray = tube.attributes.position.array;\n  const nArray = tube.attributes.normal.array;\n  const normal = new Vector3();\n  let P;\n\n  for (let i = 0; i < tubularSegments; i++) {\n    updateSegment(i);\n  }\n  updateSegment(tubularSegments);\n\n  tube.attributes.position.needsUpdate = true;\n  tube.attributes.normal.needsUpdate = true;\n\n  function updateSegment(i) {\n    P = curve.getPointAt(i / tubularSegments, P);\n    const N = frames.normals[i];\n    const B = frames.binormals[i];\n    for (let j = 0; j <= radialSegments; j++) {\n      const v = j / radialSegments * Math.PI * 2;\n      const sin = Math.sin(v);\n      const cos = -Math.cos(v);\n      normal.x = (cos * N.x + sin * B.x);\n      normal.y = (cos * N.y + sin * B.y);\n      normal.z = (cos * N.z + sin * B.z);\n      normal.normalize();\n      const index = (i * (radialSegments + 1) + j) * 3;\n      nArray[index] = normal.x;\n      nArray[index + 1] = normal.y;\n      nArray[index + 2] = normal.z;\n      pArray[index] = P.x + radius * normal.x;\n      pArray[index + 1] = P.y + radius * normal.y;\n      pArray[index + 2] = P.z + radius * normal.z;\n    }\n  }\n}\n","import {\n  BackSide,\n  CubeCamera,\n  FrontSide,\n  LinearMipmapLinearFilter,\n  Mesh as TMesh,\n  RGBFormat,\n  WebGLCubeRenderTarget,\n} from 'three';\nimport Mesh from './Mesh.js';\nimport { bindProp } from '../tools.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    cubeRTSize: { type: Number, default: 256 },\n    cubeCameraNear: { type: Number, default: 0.1 },\n    cubeCameraFar: { type: Number, default: 2000 },\n    autoUpdate: Boolean,\n  },\n  mounted() {\n    this.initGem();\n    if (this.autoUpdate) this.three.onBeforeRender(this.updateCubeRT);\n    else this.rendererComponent.onMounted(this.updateCubeRT);\n  },\n  unmounted() {\n    this.three.offBeforeRender(this.updateCubeRT);\n    if (this.meshBack) this.$parent.remove(this.meshBack);\n    if (this.materialBack) this.materialBack.dispose();\n  },\n  methods: {\n    initGem() {\n      const cubeRT = new WebGLCubeRenderTarget(this.cubeRTSize, { format: RGBFormat, generateMipmaps: true, minFilter: LinearMipmapLinearFilter });\n      this.cubeCamera = new CubeCamera(this.cubeCameraNear, this.cubeCameraFar, cubeRT);\n      bindProp(this, 'position', this.cubeCamera);\n      this.$parent.add(this.cubeCamera);\n\n      this.material.side = FrontSide;\n      this.material.envMap = cubeRT.texture;\n      this.material.envMapIntensity = 10;\n      this.material.metalness = 0;\n      this.material.roughness = 0;\n      this.material.opacity = 0.75;\n      this.material.transparent = true;\n      this.material.premultipliedAlpha = true;\n      this.material.needsUpdate = true;\n\n      this.materialBack = this.material.clone();\n      this.materialBack.side = BackSide;\n      this.materialBack.envMapIntensity = 5;\n      this.materialBack.metalness = 1;\n      this.materialBack.roughness = 0;\n      this.materialBack.opacity = 0.5;\n\n      this.meshBack = new TMesh(this.geometry, this.materialBack);\n\n      bindProp(this, 'position', this.meshBack);\n      bindProp(this, 'rotation', this.meshBack);\n      bindProp(this, 'scale', this.meshBack);\n      this.$parent.add(this.meshBack);\n    },\n    updateCubeRT() {\n      this.mesh.visible = false;\n      this.meshBack.visible = false;\n      this.cubeCamera.update(this.three.renderer, this.scene);\n      this.mesh.visible = true;\n      this.meshBack.visible = true;\n    },\n  },\n  __hmrId: 'Gem',\n};\n","import { DoubleSide, MeshBasicMaterial, PlaneBufferGeometry, TextureLoader } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  emits: ['loaded'],\n  extends: Mesh,\n  props: {\n    src: String,\n    width: Number,\n    height: Number,\n    keepSize: Boolean,\n  },\n  created() {\n    this.createGeometry();\n    this.createMaterial();\n    this.initMesh();\n\n    watch(() => this.src, this.refreshTexture);\n\n    ['width', 'height'].forEach(p => {\n      watch(() => this[p], this.resize);\n    });\n\n    if (this.keepSize) this.three.onAfterResize(this.resize);\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new PlaneBufferGeometry(1, 1, 1, 1);\n    },\n    createMaterial() {\n      this.material = new MeshBasicMaterial({ side: DoubleSide, map: this.loadTexture() });\n    },\n    loadTexture() {\n      return new TextureLoader().load(this.src, this.onLoaded);\n    },\n    refreshTexture() {\n      if (this.texture) this.texture.dispose();\n      this.material.map = this.loadTexture();\n      this.material.needsUpdate = true;\n    },\n    onLoaded(texture) {\n      this.texture = texture;\n      this.resize();\n      this.$emit('loaded');\n    },\n    resize() {\n      if (!this.texture) return;\n      const screen = this.three.size;\n      const iW = this.texture.image.width;\n      const iH = this.texture.image.height;\n      const iRatio = iW / iH;\n      let w, h;\n      if (this.width && this.height) {\n        w = this.width * screen.wWidth / screen.width;\n        h = this.height * screen.wHeight / screen.height;\n      } else if (this.width) {\n        w = this.width * screen.wWidth / screen.width;\n        h = w / iRatio;\n      } else if (this.height) {\n        h = this.height * screen.wHeight / screen.height;\n        w = h * iRatio;\n      }\n      this.mesh.scale.x = w;\n      this.mesh.scale.y = h;\n    },\n  },\n  __hmrId: 'Image',\n};\n","import { watch } from 'vue';\nimport { InstancedMesh } from 'three';\nimport Object3D from '../core/Object3D.js';\n\nexport default {\n  extends: Object3D,\n  props: {\n    castShadow: Boolean,\n    receiveShadow: Boolean,\n    count: Number,\n  },\n  provide() {\n    return {\n      mesh: this,\n    };\n  },\n  beforeMount() {\n    if (!this.$slots.default) {\n      console.error('Missing Geometry');\n    }\n  },\n  created() {\n    this.initMesh();\n  },\n  methods: {\n    initMesh() {\n      this.mesh = new InstancedMesh(this.geometry, this.material, this.count);\n\n      ['castShadow', 'receiveShadow'].forEach(p => {\n        this.mesh[p] = this[p];\n        watch(() => this[p], () => { this.mesh[p] = this[p]; });\n      });\n\n      this.initObject3D(this.mesh);\n    },\n    setGeometry(geometry) {\n      this.geometry = geometry;\n      if (this.mesh) this.mesh.geometry = geometry;\n    },\n    setMaterial(material) {\n      this.material = material;\n      if (this.mesh) this.mesh.material = material;\n    },\n  },\n  __hmrId: 'InstancedMesh',\n};\n","import {\n  CubeCamera,\n  LinearMipmapLinearFilter,\n  RGBFormat,\n  WebGLCubeRenderTarget,\n} from 'three';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    cubeRTSize: { type: Number, default: 256 },\n    cubeCameraNear: { type: Number, default: 0.1 },\n    cubeCameraFar: { type: Number, default: 2000 },\n    autoUpdate: Boolean,\n  },\n  mounted() {\n    this.initMirrorMesh();\n    if (this.autoUpdate) this.three.onBeforeRender(this.updateCubeRT);\n    else this.rendererComponent.onMounted(this.updateCubeRT);\n  },\n  unmounted() {\n    this.three.offBeforeRender(this.updateCubeRT);\n    if (this.cubeCamera) this.$parent.remove(this.cubeCamera);\n  },\n  methods: {\n    initMirrorMesh() {\n      const cubeRT = new WebGLCubeRenderTarget(this.cubeRTSize, { format: RGBFormat, generateMipmaps: true, minFilter: LinearMipmapLinearFilter });\n      this.cubeCamera = new CubeCamera(this.cubeCameraNear, this.cubeCameraFar, cubeRT);\n      this.$parent.add(this.cubeCamera);\n\n      this.material.envMap = cubeRT.texture;\n      this.material.needsUpdate = true;\n    },\n    updateCubeRT() {\n      this.mesh.visible = false;\n      this.cubeCamera.update(this.three.renderer, this.scene);\n      this.mesh.visible = true;\n    },\n  },\n  __hmrId: 'MirrorMesh',\n};\n","import {\n  CubeCamera,\n  CubeRefractionMapping,\n  LinearMipmapLinearFilter,\n  RGBFormat,\n  WebGLCubeRenderTarget,\n} from 'three';\nimport Mesh from './Mesh.js';\nimport { bindProp } from '../tools.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    cubeRTSize: { type: Number, default: 256 },\n    cubeCameraNear: { type: Number, default: 0.1 },\n    cubeCameraFar: { type: Number, default: 2000 },\n    refractionRatio: { type: Number, default: 0.98 },\n    autoUpdate: Boolean,\n  },\n  mounted() {\n    this.initMirrorMesh();\n    if (this.autoUpdate) this.three.onBeforeRender(this.updateCubeRT);\n    else this.rendererComponent.onMounted(this.updateCubeRT);\n  },\n  unmounted() {\n    this.three.offBeforeRender(this.updateCubeRT);\n    if (this.cubeCamera) this.$parent.remove(this.cubeCamera);\n  },\n  methods: {\n    initMirrorMesh() {\n      const cubeRT = new WebGLCubeRenderTarget(this.cubeRTSize, { mapping: CubeRefractionMapping, format: RGBFormat, generateMipmaps: true, minFilter: LinearMipmapLinearFilter });\n      this.cubeCamera = new CubeCamera(this.cubeCameraNear, this.cubeCameraFar, cubeRT);\n      bindProp(this, 'position', this.cubeCamera);\n      this.$parent.add(this.cubeCamera);\n\n      this.material.envMap = cubeRT.texture;\n      this.material.refractionRatio = this.refractionRatio;\n      this.material.needsUpdate = true;\n    },\n    updateCubeRT() {\n      this.mesh.visible = false;\n      this.cubeCamera.update(this.three.renderer, this.scene);\n      this.mesh.visible = true;\n    },\n  },\n  __hmrId: 'RefractionMesh',\n};\n","import { Sprite, SpriteMaterial, TextureLoader } from 'three';\nimport Object3D from '../core/Object3D.js';\n\nexport default {\n  extends: Object3D,\n  emits: ['loaded'],\n  props: {\n    src: String,\n  },\n  data() {\n    return {\n      loading: true,\n    };\n  },\n  created() {\n    this.texture = new TextureLoader().load(this.src, this.onLoaded);\n    this.material = new SpriteMaterial({ map: this.texture });\n    this.sprite = new Sprite(this.material);\n    this.geometry = this.sprite.geometry;\n    this.initObject3D(this.sprite);\n  },\n  unmounted() {\n    this.texture.dispose();\n    this.material.dispose();\n  },\n  methods: {\n    onLoaded() {\n      this.loading = false;\n      this.updateUV();\n      this.$emit('loaded');\n    },\n    updateUV() {\n      this.iWidth = this.texture.image.width;\n      this.iHeight = this.texture.image.height;\n      this.iRatio = this.iWidth / this.iHeight;\n\n      let x = 0.5, y = 0.5;\n      if (this.iRatio > 1) {\n        y = 0.5 / this.iRatio;\n      } else {\n        x = 0.5 / this.iRatio;\n      }\n\n      const positions = this.geometry.attributes.position.array;\n      positions[0] = -x; positions[1] = -y;\n      positions[5] = x; positions[6] = -y;\n      positions[10] = x; positions[11] = y;\n      positions[15] = -x; positions[16] = y;\n      this.geometry.attributes.position.needsUpdate = true;\n    },\n  },\n  __hmrId: 'Sprite',\n};\n","import { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\n\nexport default {\n  setup() {\n    return {\n      passes: [],\n    };\n  },\n  inject: ['three'],\n  provide() {\n    return {\n      passes: this.passes,\n    };\n  },\n  mounted() {\n    this.three.onAfterInit(() => {\n      this.composer = new EffectComposer(this.three.renderer);\n      this.three.renderer.autoClear = false;\n      this.passes.forEach(pass => {\n        this.composer.addPass(pass);\n      });\n      this.three.composer = this.composer;\n\n      this.resize();\n      this.three.onAfterResize(this.resize);\n    });\n  },\n  unmounted() {\n    this.three.offAfterResize(this.resize);\n  },\n  methods: {\n    resize() {\n      this.composer.setSize(this.three.size.width, this.three.size.height);\n    },\n  },\n  render() {\n    return this.$slots.default();\n  },\n  __hmrId: 'EffectComposer',\n};\n","export default {\n  inject: ['three', 'passes'],\n  beforeMount() {\n    if (!this.passes) {\n      console.error('Missing parent EffectComposer');\n    }\n  },\n  unmounted() {\n    if (this.pass.dispose) this.pass.dispose();\n  },\n  render() {\n    return [];\n  },\n  __hmrId: 'EffectPass',\n};\n","import { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport EffectPass from './EffectPass.js';\n\nexport default {\n  extends: EffectPass,\n  mounted() {\n    if (!this.three.scene) {\n      console.error('Missing Scene');\n    }\n    if (!this.three.camera) {\n      console.error('Missing Camera');\n    }\n    const pass = new RenderPass(this.three.scene, this.three.camera);\n    this.passes.push(pass);\n    this.pass = pass;\n  },\n  __hmrId: 'RenderPass',\n};\n","import { BokehPass } from 'three/examples/jsm/postprocessing/BokehPass.js';\nimport EffectPass from './EffectPass.js';\n\nexport default {\n  extends: EffectPass,\n  props: {\n    focus: {\n      type: Number,\n      default: 1,\n    },\n    aperture: {\n      type: Number,\n      default: 0.025,\n    },\n    maxblur: {\n      type: Number,\n      default: 0.01,\n    },\n  },\n  watch: {\n    focus() { this.pass.uniforms.focus.value = this.focus; },\n    aperture() { this.pass.uniforms.aperture.value = this.aperture; },\n    maxblur() { this.pass.uniforms.maxblur.value = this.maxblur; },\n  },\n  mounted() {\n    if (!this.three.scene) {\n      console.error('Missing Scene');\n    }\n    if (!this.three.camera) {\n      console.error('Missing Camera');\n    }\n    const params = {\n      focus: this.focus,\n      aperture: this.aperture,\n      maxblur: this.maxblur,\n      width: this.three.size.width,\n      height: this.three.size.height,\n    };\n    const pass = new BokehPass(this.three.scene, this.three.camera, params);\n    this.passes.push(pass);\n    this.pass = pass;\n  },\n  __hmrId: 'BokehPass',\n};\n","import { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass.js';\nimport EffectPass from './EffectPass.js';\n\nexport default {\n  extends: EffectPass,\n  props: {\n    noiseIntensity: {\n      type: Number,\n      default: 0.5,\n    },\n    scanlinesIntensity: {\n      type: Number,\n      default: 0.05,\n    },\n    scanlinesCount: {\n      type: Number,\n      default: 4096,\n    },\n    grayscale: {\n      type: Number,\n      default: 0,\n    },\n  },\n  watch: {\n    noiseIntensity() { this.pass.uniforms.nIntensity.value = this.noiseIntensity; },\n    scanlinesIntensity() { this.pass.uniforms.sIntensity.value = this.scanlinesIntensity; },\n    scanlinesCount() { this.pass.uniforms.sCount.value = this.scanlinesCount; },\n    grayscale() { this.pass.uniforms.grayscale.value = this.grayscale; },\n  },\n  mounted() {\n    const pass = new FilmPass(this.noiseIntensity, this.scanlinesIntensity, this.scanlinesCount, this.grayscale);\n    this.passes.push(pass);\n    this.pass = pass;\n  },\n  __hmrId: 'FilmPass',\n};\n","import { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader.js';\nimport EffectPass from './EffectPass.js';\n\nexport default {\n  extends: EffectPass,\n  mounted() {\n    const pass = new ShaderPass(FXAAShader);\n    this.passes.push(pass);\n    this.pass = pass;\n\n    // resize will be called in three init\n    this.three.onAfterResize(this.resize);\n  },\n  unmounted() {\n    this.three.offAfterResize(this.resize);\n  },\n  methods: {\n    resize() {\n      const { resolution } = this.pass.material.uniforms;\n      resolution.value.x = 1 / this.three.size.width;\n      resolution.value.y = 1 / this.three.size.height;\n    },\n  },\n  __hmrId: 'FXAAPass',\n};\n","import { HalftonePass } from 'three/examples/jsm/postprocessing/HalftonePass.js';\nimport { watch } from 'vue';\nimport EffectPass from './EffectPass.js';\n\nexport default {\n  extends: EffectPass,\n  props: {\n    shape: { type: Number, default: 1 },\n    radius: { type: Number, default: 4 },\n    rotateR: { type: Number, default: Math.PI / 12 * 1 },\n    rotateG: { type: Number, default: Math.PI / 12 * 2 },\n    rotateB: { type: Number, default: Math.PI / 12 * 3 },\n    scatter: { type: Number, default: 0 },\n  },\n  mounted() {\n    const pass = new HalftonePass(this.three.size.width, this.three.size.height, {});\n\n    ['shape', 'radius', 'rotateR', 'rotateG', 'rotateB', 'scatter'].forEach(p => {\n      pass.uniforms[p].value = this[p];\n      watch(() => this[p], () => {\n        pass.uniforms[p].value = this[p];\n      });\n    });\n\n    this.passes.push(pass);\n    this.pass = pass;\n  },\n  __hmrId: 'HalftonePass',\n};\n","import { SMAAPass } from 'three/examples/jsm/postprocessing/SMAAPass.js';\nimport EffectPass from './EffectPass.js';\n\nexport default {\n  extends: EffectPass,\n  mounted() {\n    // three size is not set yet, but this pass will be resized by effect composer\n    const pass = new SMAAPass(this.three.size.width, this.three.size.height);\n    this.passes.push(pass);\n    this.pass = pass;\n  },\n  __hmrId: 'SMAAPass',\n};\n","export default {\n  uniforms: {},\n  vertexShader: `\n    varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  `,\n  fragmentShader: `\n    varying vec2 vUv;\n    void main() {\n      gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n    }\n  `,\n};\n","// From https://github.com/evanw/glfx.js\nimport { Vector2 } from 'three';\nimport DefaultShader from './default';\n\nexport default {\n  uniforms: {\n    tDiffuse: { value: null },\n    blurRadius: { value: 0 },\n    gradientRadius: { value: 0 },\n    start: { value: new Vector2() },\n    end: { value: new Vector2() },\n    delta: { value: new Vector2() },\n    texSize: { value: new Vector2() },\n  },\n  vertexShader: DefaultShader.vertexShader,\n  fragmentShader: `\n    uniform sampler2D tDiffuse;\n    uniform float blurRadius;\n    uniform float gradientRadius;\n    uniform vec2 start;\n    uniform vec2 end;\n    uniform vec2 delta;\n    uniform vec2 texSize;\n    varying vec2 vUv;\n\n    float random(vec3 scale, float seed) {\n      /* use the fragment position for a different seed per-pixel */\n      return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n    }\n\n    void main() {\n      vec4 color = vec4(0.0);\n      float total = 0.0;\n\n      /* randomize the lookup values to hide the fixed number of samples */\n      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n\n      vec2 normal = normalize(vec2(start.y - end.y, end.x - start.x));\n      float radius = smoothstep(0.0, 1.0, abs(dot(vUv * texSize - start, normal)) / gradientRadius) * blurRadius;\n      for (float t = -30.0; t <= 30.0; t++) {\n          float percent = (t + offset - 0.5) / 30.0;\n          float weight = 1.0 - abs(percent);\n          vec4 texel = texture2D(tDiffuse, vUv + delta / texSize * percent * radius);\n          // vec4 texel2 = texture2D(tDiffuse, vUv + vec2(-delta.y, delta.x) / texSize * percent * radius);\n\n          /* switch to pre-multiplied alpha to correctly blur transparent images */\n          texel.rgb *= texel.a;\n          // texel2.rgb *= texel2.a;\n\n          color += texel * weight;\n          total += 2.0 * weight;\n      }\n\n      gl_FragColor = color / total;\n\n      /* switch back from pre-multiplied alpha */\n      gl_FragColor.rgb /= gl_FragColor.a + 0.00001;\n    }\n  `,\n};\n","import { Vector2 } from 'three';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\nimport { watch } from 'vue';\nimport EffectPass from './EffectPass.js';\nimport TiltShift from '../shaders/TiltShift.js';\nimport { bindProp } from '../tools.js';\n\nexport default {\n  extends: EffectPass,\n  props: {\n    blurRadius: { type: Number, default: 10 },\n    gradientRadius: { type: Number, default: 100 },\n    start: { type: Object, default: { x: 0, y: 100 } },\n    end: { type: Object, default: { x: 10, y: 100 } },\n  },\n  mounted() {\n    this.pass = new ShaderPass(TiltShift);\n    this.passes.push(this.pass);\n\n    this.pass1 = new ShaderPass(TiltShift);\n    this.passes.push(this.pass1);\n\n    const uniforms = this.uniforms = this.pass.uniforms;\n    const uniforms1 = this.uniforms1 = this.pass1.uniforms;\n    uniforms1.blurRadius = uniforms.blurRadius;\n    uniforms1.gradientRadius = uniforms.gradientRadius;\n    uniforms1.start = uniforms.start;\n    uniforms1.end = uniforms.end;\n    uniforms1.texSize = uniforms.texSize;\n\n    bindProp(this, 'blurRadius', uniforms.blurRadius, 'value');\n    bindProp(this, 'gradientRadius', uniforms.gradientRadius, 'value');\n\n    this.updateFocusLine();\n    ['start', 'end'].forEach(p => {\n      watch(() => this[p], this.updateFocusLine, { deep: true });\n    });\n\n    this.pass.setSize = (width, height) => {\n      uniforms.texSize.value.set(width, height);\n    };\n  },\n  methods: {\n    updateFocusLine() {\n      this.uniforms.start.value.copy(this.start);\n      this.uniforms.end.value.copy(this.end);\n      const dv = new Vector2().copy(this.end).sub(this.start).normalize();\n      this.uniforms.delta.value.copy(dv);\n      this.uniforms1.delta.value.set(-dv.y, dv.x);\n    },\n  },\n  __hmrId: 'TiltShiftPass',\n};\n","import { Vector2 } from 'three';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js';\nimport EffectPass from './EffectPass.js';\n\nexport default {\n  extends: EffectPass,\n  props: {\n    strength: { type: Number, default: 1.5 },\n    radius: { type: Number, default: 0 },\n    threshold: { type: Number, default: 0 },\n  },\n  watch: {\n    strength() { this.pass.strength = this.strength; },\n    radius() { this.pass.radius = this.radius; },\n    threshold() { this.pass.threshold = this.threshold; },\n  },\n  mounted() {\n    const size = new Vector2(this.three.size.width, this.three.size.height);\n    const pass = new UnrealBloomPass(size, this.strength, this.radius, this.threshold);\n    this.passes.push(pass);\n    this.pass = pass;\n  },\n  __hmrId: 'UnrealBloomPass',\n};\n","// From https://github.com/evanw/glfx.js\nimport { Vector2 } from 'three';\nimport DefaultShader from './default';\n\nexport default {\n  uniforms: {\n    tDiffuse: { value: null },\n    center: { value: new Vector2(0.5, 0.5) },\n    strength: { value: 0 },\n  },\n  vertexShader: DefaultShader.vertexShader,\n  fragmentShader: `\n    uniform sampler2D tDiffuse;\n    uniform vec2 center;\n    uniform float strength;\n    varying vec2 vUv;\n\n    float random(vec3 scale, float seed) {\n      /* use the fragment position for a different seed per-pixel */\n      return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n    }\n    \n    void main() {\n      vec4 color = vec4(0.0);\n      float total = 0.0;\n      vec2 toCenter = center - vUv;\n      \n      /* randomize the lookup values to hide the fixed number of samples */\n      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n      \n      for (float t = 0.0; t <= 40.0; t++) {\n        float percent = (t + offset) / 40.0;\n        float weight = 4.0 * (percent - percent * percent);\n        vec4 texel = texture2D(tDiffuse, vUv + toCenter * percent * strength);\n\n        /* switch to pre-multiplied alpha to correctly blur transparent images */\n        texel.rgb *= texel.a;\n\n        color += texel * weight;\n        total += weight;\n      }\n\n      gl_FragColor = color / total;\n\n      /* switch back from pre-multiplied alpha */\n      gl_FragColor.rgb /= gl_FragColor.a + 0.00001;\n    }\n  `,\n};\n","import { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\nimport EffectPass from './EffectPass.js';\nimport ZoomBlur from '../shaders/ZoomBlur.js';\nimport { bindProp } from '../tools.js';\n\nexport default {\n  extends: EffectPass,\n  props: {\n    center: { type: Object, default: { x: 0.5, y: 0.5 } },\n    strength: { type: Number, default: 0.5 },\n  },\n  mounted() {\n    this.pass = new ShaderPass(ZoomBlur);\n    this.passes.push(this.pass);\n\n    const uniforms = this.uniforms = this.pass.uniforms;\n    bindProp(this, 'center', uniforms.center, 'value');\n    bindProp(this, 'strength', uniforms.strength, 'value');\n  },\n  __hmrId: 'ZoomBlurPass',\n};\n","import { createApp as _createApp } from 'vue';\nimport * as TROIS from './index.js';\n\nexport const TroisJSVuePlugin = {\n  install: (app) => {\n    const comps = [\n      'Camera',\n      'OrthographicCamera',\n      'PerspectiveCamera',\n      'Renderer',\n      'Scene',\n      'Group',\n\n      'BoxGeometry',\n      'CircleGeometry',\n      'ConeGeometry',\n      'CylinderGeometry',\n      'DodecahedronGeometry',\n      'IcosahedronGeometry',\n      'LatheGeometry',\n      'OctahedronGeometry',\n      'PolyhedronGeometry',\n      'RingGeometry',\n      'SphereGeometry',\n      'TetrahedronGeometry',\n      'TorusGeometry',\n      'TorusKnotGeometry',\n      'TubeGeometry',\n\n      'AmbientLight',\n      'DirectionalLight',\n      'HemisphereLight',\n      'PointLight',\n      'RectAreaLight',\n      'SpotLight',\n\n      'BasicMaterial',\n      'LambertMaterial',\n      'MatcapMaterial',\n      'PhongMaterial',\n      'PhysicalMaterial',\n      'ShaderMaterial',\n      'StandardMaterial',\n      'SubSurfaceMaterial',\n      'ToonMaterial',\n\n      'Texture',\n      'CubeTexture',\n\n      'Box',\n      'Circle',\n      'Cone',\n      'Cylinder',\n      'Dodecahedron',\n      'Icosahedron',\n      'Mesh',\n      'Lathe',\n      'Octahedron',\n      'Plane',\n      'Polyhedron',\n      'Ring',\n      'Sphere',\n      'Tetrahedron',\n      'Text',\n      'Torus',\n      'TorusKnot',\n      'Tube',\n\n      'Gem',\n      'Image',\n      'InstancedMesh',\n      'MirrorMesh',\n      'RefractionMesh',\n      'Sprite',\n\n      'BokehPass',\n      'EffectComposer',\n      'FilmPass',\n      'FXAAPass',\n      'HalftonePass',\n      'RenderPass',\n      'SAOPass',\n      'SMAAPass',\n      'TiltShiftPass',\n      'UnrealBloomPass',\n      'ZoomBlurPass',\n\n      'GLTFViewer',\n    ];\n\n    comps.forEach(comp => {\n      app.component(comp, TROIS[comp]);\n    });\n  },\n};\n\nexport function createApp(params) {\n  return _createApp(params).use(TroisJSVuePlugin);\n};\n"],"names":["useThree","const","conf","canvas","antialias","alpha","autoClear","orbit_ctrl","mouse_move","mouse_raycast","mouse_over","click","resize","width","height","size","wWidth","wHeight","ratio","afterInitCallbacks","afterResizeCallbacks","beforeRenderCallbacks","mouse","Vector2","mouseV3","Vector3","mousePlane","Plane","raycaster","Raycaster","intersectObjects","obj","renderer","camera","cameraCtrl","materials","scene","params","Object","entries","forEach","key","value","console","error","WebGLRenderer","orbitCtrl","OrbitControls","domElement","onResize","window","addEventListener","setSize","mouse_move_element","document","body","onMousemove","onMouseleave","onClick","c","removeEventListener","dispose","this","update","render","composer","callback","push","filter","o","indexOf","i","splice","updateMouse","e","rect","target","getBoundingClientRect","x","clientX","left","y","clientY","top","setFromCamera","objects","length","object","onMousechange","getWorldDirection","normal","normalize","ray","intersectPlane","onObjects","offObjects","hover","onHover","let","innerWidth","innerHeight","elt","parentNode","clientWidth","clientHeight","aspect","updateProjectionMatrix","type","right","bottom","wsize","vFOV","fov","Math","PI","h","tan","abs","position","z","getCameraSize","name","props","Boolean","default","mouseMove","String","mouseRaycast","mouseOver","shadow","setup","three","raf","onMountedCallbacks","provide","rendererComponent","mounted","$el","init","shadowMap","enabled","animateC","animate","beforeUnmount","methods","onMounted","onBeforeRender","onAfterResize","requestAnimationFrame","renderC","$slots","__hmrId","setFromProp","prop","bindProp","src","srcProp","dst","dstProp","ref","toRef","watch","deep","propsValues","exclude","values","includes","lerp","value1","value2","amount","lerpv2","v1","v2","lerpv3","limit","val","min","max","getMatcapUrl","hash","format","MATCAP_ROOT","inject","Number","near","far","zoom","created","OrthographicCamera","p","lookAt","PerspectiveCamera","v","rotation","scale","unmounted","$parent","remove","o3d","initObject3D","add","extends","Object3D","group","Group","id","background","Scene","Color","rotateX","rotateY","rotateZ","mesh","watchProps","$props","createGeometry","rotateGeometry","setGeometry","geometry","addWatchers","refreshGeometry","oldGeo","Geometry","depth","widthSegments","heightSegments","depthSegments","w","d","BoxGeometry","radius","segments","thetaStart","thetaLength","CircleGeometry","radialSegments","openEnded","ConeGeometry","radiusTop","radiusBottom","CylinderGeometry","detail","DodecahedronGeometry","IcosahedronGeometry","points","Array","phiStart","phiLength","LatheGeometry","OctahedronGeometry","vertices","indices","PolyhedronGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingGeometry","SphereGeometry","TetrahedronGeometry","tube","tubularSegments","arc","TorusGeometry","q","TorusKnotGeometry","path","Curve","radiusSegments","closed","TubeGeometry","color","intensity","castShadow","shadowMapSize","light","initLight","mapSize","Light","AmbientLight","DirectionalLight","groundColor","HemisphereLight","distance","decay","PointLight","helper","RectAreaLightUniformsLib","RectAreaLight","lightHelper","RectAreaLightHelper","angle","penumbra","SpotLight","depthTest","depthWrite","flatShading","fog","opacity","side","FrontSide","transparent","vertexColors","material","createMaterial","setMaterial","_addWatchers","setProp","needsUpdate","setTexture","texture","set","Material","MeshBasicMaterial","MeshLambertMaterial","opts","matcap","TextureLoader","load","MeshMatcapMaterial","emissive","emissiveIntensity","reflectivity","shininess","specular","MeshPhongMaterial","aoMapIntensity","bumpScale","displacementBias","displacementScale","envMapIntensity","lightMapIntensity","metalness","normalScale","roughness","refractionRatio","wireframe","MeshStandardMaterial","keys","StandardMaterial","MeshPhysicalMaterial","string","find","replace","meshphongFragHead","ShaderChunk","meshphong_frag","slice","meshphongFragBody","SubsurfaceScatteringShader","uniforms","UniformsUtils","merge","ShaderLib","phong","thicknessColor","thicknessDistortion","thicknessAmbient","thicknessAttenuation","thicknessPower","thicknessScale","vertexShader","fragmentShader","lights_fragment_begin","split","join","clone","_key","_value","TShaderMaterial","lights","MeshToonMaterial","emits","onLoad","Function","onProgress","onError","mapping","UVMapping","wrapS","ClampToEdgeWrapping","wrapT","magFilter","LinearFilter","minFilter","LinearMipmapLinearFilter","repeat","center","refreshTexture","createTexture","onLoaded","$emit","urls","refraction","CubeTextureLoader","setPath","CubeRefractionMapping","receiveShadow","loading","initMesh","Mesh","over","component","addIntersectObject","event","removeIntersectObject","BoxBufferGeometry","CircleBufferGeometry","ConeBufferGeometry","CylinderBufferGeometry","DodecahedronBufferGeometry","IcosahedronBufferGeometry","LatheBufferGeometry","OctahedronBufferGeometry","PlaneBufferGeometry","PolyhedronBufferGeometry","RingBufferGeometry","SphereBufferGeometry","TetrahedronBufferGeometry","text","fontSrc","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","align","TextProps","data","font","FontLoader","TextBufferGeometry","TorusBufferGeometry","TorusKnotBufferGeometry","updateTubeGeometryPoints","curve","CatmullRomCurve3","updateCurve","parameters","frames","computeFrenetFrames","tangents","normals","binormals","P","pArray","attributes","array","nArray","updateSegment","getPointAt","N","B","j","sin","cos","index","cubeRTSize","cubeCameraNear","cubeCameraFar","autoUpdate","initGem","updateCubeRT","offBeforeRender","meshBack","materialBack","cubeRT","WebGLCubeRenderTarget","RGBFormat","generateMipmaps","cubeCamera","CubeCamera","envMap","premultipliedAlpha","BackSide","TMesh","visible","keepSize","DoubleSide","map","loadTexture","screen","iRatio","image","count","beforeMount","InstancedMesh","initMirrorMesh","SpriteMaterial","sprite","Sprite","updateUV","iWidth","iHeight","positions","passes","onAfterInit","EffectComposer","pass","addPass","offAfterResize","EffectPass","RenderPass","focus","aperture","maxblur","BokehPass","noiseIntensity","scanlinesIntensity","scanlinesCount","grayscale","nIntensity","sIntensity","sCount","FilmPass","ShaderPass","FXAAShader","resolution","shape","rotateR","rotateG","rotateB","scatter","HalftonePass","SMAAPass","tDiffuse","blurRadius","gradientRadius","start","end","delta","texSize","DefaultShader","TiltShift","pass1","uniforms1","updateFocusLine","copy","dv","sub","strength","threshold","UnrealBloomPass","ZoomBlur","TroisJSVuePlugin","install","app","comp","TROIS","createApp","_createApp","use"],"mappings":"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"}