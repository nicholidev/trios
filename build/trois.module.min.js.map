{"version":3,"file":"trois.module.min.js","sources":["../src/core/useThree.js","../src/core/Renderer.js","../src/tools.js","../src/use/useBindProp.js","../src/core/OrthographicCamera.js","../src/core/PerspectiveCamera.js","../src/core/Group.js","../src/core/Scene.js","../src/geometries/Geometry.js","../src/geometries/BoxGeometry.js","../src/geometries/CircleGeometry.js","../src/geometries/ConeGeometry.js","../src/geometries/CylinderGeometry.js","../src/geometries/DodecahedronGeometry.js","../src/geometries/IcosahedronGeometry.js","../src/geometries/LatheGeometry.js","../src/geometries/OctahedronGeometry.js","../src/geometries/PolyhedronGeometry.js","../src/geometries/RingGeometry.js","../src/geometries/SphereGeometry.js","../src/geometries/TetrahedronGeometry.js","../src/geometries/TorusGeometry.js","../src/geometries/TorusKnotGeometry.js","../src/geometries/TubeGeometry.js","../src/lights/Light.js","../src/lights/AmbientLight.js","../src/lights/DirectionalLight.js","../src/lights/PointLight.js","../src/lights/SpotLight.js","../src/materials/Material.js","../src/materials/BasicMaterial.js","../src/materials/LambertMaterial.js","../src/materials/MatcapMaterial.js","../src/materials/PhongMaterial.js","../src/materials/StandardMaterial.js","../src/materials/PhysicalMaterial.js","../src/materials/SubsurfaceScatteringShader.js","../src/materials/SubSurfaceMaterial.js","../src/materials/ShaderMaterial.js","../src/materials/ToonMaterial.js","../src/materials/Texture.js","../src/materials/CubeTexture.js","../src/meshes/Mesh.js","../src/meshes/Box.js","../src/meshes/Circle.js","../src/meshes/Cone.js","../src/meshes/Cylinder.js","../src/meshes/Dodecahedron.js","../src/meshes/Icosahedron.js","../src/meshes/Lathe.js","../src/meshes/Octahedron.js","../src/meshes/Plane.js","../src/meshes/Polyhedron.js","../src/meshes/Ring.js","../src/meshes/Sphere.js","../src/meshes/Tetrahedron.js","../src/meshes/TextProps.js","../src/meshes/Text.js","../src/meshes/Torus.js","../src/meshes/TorusKnot.js","../src/meshes/Tube.js","../src/meshes/Gem.js","../src/meshes/Image.js","../src/meshes/InstancedMesh.js","../src/meshes/MirrorMesh.js","../src/meshes/RefractionMesh.js","../src/meshes/Sprite.js","../src/effects/EffectComposer.js","../src/effects/EffectPass.js","../src/effects/RenderPass.js","../src/effects/BokehPass.js","../src/effects/FilmPass.js","../src/effects/FXAAPass.js","../src/effects/HalftonePass.js","../src/effects/SMAAPass.js","../src/shaders/default.js","../src/shaders/TiltShift.js","../src/use/useBindPropValue.js","../src/effects/TiltShiftPass.js","../src/effects/UnrealBloomPass.js","../src/shaders/ZoomBlur.js","../src/effects/ZoomBlurPass.js","../src/plugin.js"],"sourcesContent":["import {\n  Plane,\n  Raycaster,\n  Vector2,\n  Vector3,\n  WebGLRenderer,\n} from 'three';\n\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\n/**\n * Three.js helper\n */\nexport default function useThree() {\n  // default conf\n  const conf = {\n    canvas: null,\n    antialias: true,\n    alpha: false,\n    autoClear: true,\n    orbit_ctrl: false,\n    mouse_move: false,\n    mouse_raycast: false,\n    mouse_over: false,\n    click: false,\n    resize: true,\n    width: 0,\n    height: 0,\n  };\n\n  // size\n  const size = {\n    width: 1, height: 1,\n    wWidth: 1, wHeight: 1,\n    ratio: 1,\n  };\n\n  // handlers\n  const afterInitCallbacks = [];\n  let afterResizeCallbacks = [];\n  let beforeRenderCallbacks = [];\n\n  // mouse tracking\n  const mouse = new Vector2();\n  const mouseV3 = new Vector3();\n  const mousePlane = new Plane(new Vector3(0, 0, 1), 0);\n  const raycaster = new Raycaster();\n\n  // raycast objects\n  const intersectObjects = [];\n\n  // returned object\n  const obj = {\n    conf,\n    renderer: null,\n    camera: null,\n    cameraCtrl: null,\n    materials: {},\n    scene: null,\n    size,\n    mouse, mouseV3,\n    init,\n    dispose,\n    render,\n    renderC,\n    setSize,\n    onAfterInit,\n    onAfterResize, offAfterResize,\n    onBeforeRender, offBeforeRender,\n    addIntersectObject, removeIntersectObject,\n  };\n\n  /**\n   * init three\n   */\n  function init(params) {\n    if (params) {\n      Object.entries(params).forEach(([key, value]) => {\n        conf[key] = value;\n      });\n    }\n\n    if (!obj.scene) {\n      console.error('Missing Scene');\n      return;\n    }\n\n    if (!obj.camera) {\n      console.error('Missing Camera');\n      return;\n    }\n\n    obj.renderer = new WebGLRenderer({ canvas: conf.canvas, antialias: conf.antialias, alpha: conf.alpha });\n    obj.renderer.autoClear = conf.autoClear;\n\n    if (conf.orbit_ctrl) {\n      obj.orbitCtrl = new OrbitControls(obj.camera, obj.renderer.domElement);\n      if (conf.orbit_ctrl instanceof Object) {\n        Object.entries(conf.orbit_ctrl).forEach(([key, value]) => {\n          obj.orbitCtrl[key] = value;\n        });\n      }\n    }\n\n    if (conf.width && conf.height) {\n      setSize(conf.width, conf.height);\n    } else if (conf.resize) {\n      onResize();\n      window.addEventListener('resize', onResize);\n    }\n\n    conf.mouse_move = conf.mouse_move || conf.mouse_over;\n    if (conf.mouse_move) {\n      if (conf.mouse_move === 'body') {\n        obj.mouse_move_element = document.body;\n      } else {\n        obj.mouse_move_element = obj.renderer.domElement;\n      }\n      obj.mouse_move_element.addEventListener('mousemove', onMousemove);\n      obj.mouse_move_element.addEventListener('mouseleave', onMouseleave);\n    }\n\n    if (conf.click) {\n      obj.renderer.domElement.addEventListener('click', onClick);\n    }\n\n    afterInitCallbacks.forEach(c => c());\n\n    return true;\n  };\n\n  /**\n   * add after init callback\n   */\n  function onAfterInit(callback) {\n    afterInitCallbacks.push(callback);\n  }\n\n  /**\n   * add after resize callback\n   */\n  function onAfterResize(callback) {\n    afterResizeCallbacks.push(callback);\n  }\n\n  /**\n   * remove after resize callback\n   */\n  function offAfterResize(callback) {\n    afterResizeCallbacks = afterResizeCallbacks.filter(c => c !== callback);\n  }\n\n  /**\n   * add before render callback\n   */\n  function onBeforeRender(callback) {\n    beforeRenderCallbacks.push(callback);\n  }\n\n  /**\n   * remove before render callback\n   */\n  function offBeforeRender(callback) {\n    beforeRenderCallbacks = beforeRenderCallbacks.filter(c => c !== callback);\n  }\n\n  /**\n   * default render\n   */\n  function render() {\n    if (obj.orbitCtrl) obj.orbitCtrl.update();\n    beforeRenderCallbacks.forEach(c => c());\n    obj.renderer.render(obj.scene, obj.camera);\n  }\n\n  /**\n   * composer render\n   */\n  function renderC() {\n    if (obj.orbitCtrl) obj.orbitCtrl.update();\n    beforeRenderCallbacks.forEach(c => c());\n    obj.composer.render();\n  }\n\n  /**\n   * add intersect object\n   */\n  function addIntersectObject(o) {\n    if (intersectObjects.indexOf(o) === -1) {\n      intersectObjects.push(o);\n    }\n  }\n\n  /**\n   * remove intersect object\n   */\n  function removeIntersectObject(o) {\n    const i = intersectObjects.indexOf(o);\n    if (i !== -1) {\n      intersectObjects.splice(i, 1);\n    }\n  }\n\n  /**\n   * remove listeners\n   */\n  function dispose() {\n    beforeRenderCallbacks = [];\n    window.removeEventListener('resize', onResize);\n    if (obj.mouse_move_element) {\n      obj.mouse_move_element.removeEventListener('mousemove', onMousemove);\n      obj.mouse_move_element.removeEventListener('mouseleave', onMouseleave);\n    }\n    obj.renderer.domElement.removeEventListener('click', onClick);\n    if (obj.orbitCtrl) obj.orbitCtrl.dispose();\n    this.renderer.dispose();\n  }\n\n  /**\n   */\n  function updateMouse(e) {\n    const rect = e.target.getBoundingClientRect();\n    mouse.x = ((e.clientX - rect.left) / size.width) * 2 - 1;\n    mouse.y = -((e.clientY - rect.top) / size.height) * 2 + 1;\n  }\n\n  /**\n   * click listener\n   */\n  function onClick(e) {\n    updateMouse(e);\n    raycaster.setFromCamera(mouse, obj.camera);\n    const objects = raycaster.intersectObjects(intersectObjects);\n    for (let i = 0; i < objects.length; i++) {\n      const o = objects[i].object;\n      if (o.onClick) o.onClick(e);\n    }\n  }\n\n  /**\n   * mousemove listener\n   */\n  function onMousemove(e) {\n    updateMouse(e);\n    onMousechange(e);\n  }\n\n  /**\n   * mouseleave listener\n   */\n  function onMouseleave(e) {\n    // mouse.x = 0;\n    // mouse.y = 0;\n    onMousechange(e);\n  }\n\n  /**\n   * mouse change\n   */\n  function onMousechange(e) {\n    if (conf.mouse_over || conf.mouse_raycast) {\n      raycaster.setFromCamera(mouse, obj.camera);\n\n      if (conf.mouse_raycast) {\n        // get mouse 3d position\n        obj.camera.getWorldDirection(mousePlane.normal);\n        mousePlane.normal.normalize();\n        raycaster.ray.intersectPlane(mousePlane, mouseV3);\n      }\n\n      if (conf.mouse_over) {\n        const onObjects = raycaster.intersectObjects(intersectObjects);\n        const offObjects = [...intersectObjects];\n        for (let i = 0; i < onObjects.length; i++) {\n          const o = onObjects[i].object;\n          if (!o.hover && o.onHover) {\n            o.hover = true;\n            o.onHover(true);\n          }\n          offObjects.splice(offObjects.indexOf(o), 1);\n        }\n        for (let i = 0; i < offObjects.length; i++) {\n          const o = offObjects[i];\n          if (o.hover && o.onHover) {\n            o.hover = false;\n            o.onHover(false);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * resize listener\n   */\n  function onResize() {\n    if (conf.resize === 'window') {\n      setSize(window.innerWidth, window.innerHeight);\n    } else {\n      const elt = obj.renderer.domElement.parentNode;\n      setSize(elt.clientWidth, elt.clientHeight);\n    }\n    afterResizeCallbacks.forEach(c => c());\n  }\n\n  /**\n   * update renderer size and camera\n   */\n  function setSize(width, height) {\n    size.width = width;\n    size.height = height;\n    size.ratio = width / height;\n\n    obj.renderer.setSize(width, height, false);\n    obj.camera.aspect = size.ratio;\n    obj.camera.updateProjectionMatrix();\n\n    if (obj.composer) {\n      obj.composer.setSize(width, height);\n    }\n\n    if (obj.camera.type === 'OrthographicCamera') {\n      size.wWidth = obj.camera.right - obj.camera.left;\n      size.wHeight = obj.camera.top - obj.camera.bottom;\n    } else {\n      const wsize = getCameraSize();\n      size.wWidth = wsize[0]; size.wHeight = wsize[1];\n    }\n  }\n\n  /**\n   * calculate camera visible area size\n   */\n  function getCameraSize() {\n    const vFOV = (obj.camera.fov * Math.PI) / 180;\n    const h = 2 * Math.tan(vFOV / 2) * Math.abs(obj.camera.position.z);\n    const w = h * obj.camera.aspect;\n    return [w, h];\n  }\n\n  return obj;\n}\n","import { h } from 'vue';\nimport useThree from './useThree';\n\nexport default {\n  props: {\n    antialias: Boolean,\n    alpha: Boolean,\n    autoClear: { type: Boolean, default: true },\n    mouseMove: { type: [Boolean, String], default: false },\n    mouseRaycast: { type: Boolean, default: false },\n    mouseOver: { type: Boolean, default: false },\n    click: { type: Boolean, default: false },\n    orbitCtrl: { type: [Boolean, Object], default: false },\n    resize: { type: [Boolean, String], default: true },\n    shadow: Boolean,\n    width: String,\n    height: String,\n  },\n  setup() {\n    return {\n      three: useThree(),\n      raf: true,\n      onMountedCallbacks: [],\n    };\n  },\n  provide() {\n    return {\n      three: this.three,\n      // renderer: this.three.renderer,\n      rendererComponent: this,\n    };\n  },\n  mounted() {\n    const params = {\n      canvas: this.$el,\n      antialias: this.antialias,\n      alpha: this.alpha,\n      autoClear: this.autoClear,\n      orbit_ctrl: this.orbitCtrl,\n      mouse_move: this.mouseMove,\n      mouse_raycast: this.mouseRaycast,\n      mouse_over: this.mouseOver,\n      click: this.click,\n      resize: this.resize,\n      width: this.width,\n      height: this.height,\n    };\n\n    if (this.three.init(params)) {\n      this.three.renderer.shadowMap.enabled = this.shadow;\n      if (this.three.composer) this.animateC();\n      else this.animate();\n    };\n\n    this.onMountedCallbacks.forEach(c => c());\n  },\n  beforeUnmount() {\n    this.raf = false;\n    this.three.dispose();\n  },\n  methods: {\n    onMounted(callback) {\n      this.onMountedCallbacks.push(callback);\n    },\n    onBeforeRender(callback) {\n      this.three.onBeforeRender(callback);\n    },\n    onAfterResize(callback) {\n      this.three.onAfterResize(callback);\n    },\n    animate() {\n      if (this.raf) requestAnimationFrame(this.animate);\n      this.three.render();\n    },\n    animateC() {\n      if (this.raf) requestAnimationFrame(this.animateC);\n      this.three.renderC();\n    },\n  },\n  render() {\n    return h('canvas', {}, this.$slots.default());\n  },\n};\n","export function setFromProp(o, prop) {\n  if (prop instanceof Object) {\n    Object.entries(prop).forEach(([key, value]) => {\n      o[key] = value;\n    });\n  }\n};\n\nexport function propsValues(props, exclude) {\n  const values = {};\n  Object.entries(props).forEach(([key, value]) => {\n    if (!exclude || (exclude && !exclude.includes(key))) {\n      values[key] = value;\n    }\n  });\n  return values;\n};\n\nexport function lerp(value1, value2, amount) {\n  amount = amount < 0 ? 0 : amount;\n  amount = amount > 1 ? 1 : amount;\n  return value1 + (value2 - value1) * amount;\n};\n\nexport function lerpv2(v1, v2, amount) {\n  v1.x = lerp(v1.x, v2.x, amount);\n  v1.y = lerp(v1.y, v2.y, amount);\n};\n\nexport function lerpv3(v1, v2, amount) {\n  v1.x = lerp(v1.x, v2.x, amount);\n  v1.y = lerp(v1.y, v2.y, amount);\n  v1.z = lerp(v1.z, v2.z, amount);\n};\n\nexport function limit(val, min, max) {\n  return val < min ? min : (val > max ? max : val);\n};\n\n// from https://github.com/pmndrs/drei/blob/master/src/useMatcapTexture.tsx\nconst MATCAP_ROOT = 'https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d';\n\nexport function getMatcapUrl(hash, format = 1024) {\n  const fileName = `${hash}${getMatcapFormatString(format)}.png`;\n  return `${MATCAP_ROOT}/${format}/${fileName}`;\n};\n\nfunction getMatcapFormatString(format) {\n  switch (format) {\n    case 64:\n      return '-64px';\n    case 128:\n      return '-128px';\n    case 256:\n      return '-256px';\n    case 512:\n      return '-512px';\n    default:\n      return '';\n  }\n}\n","import { toRef, watch } from 'vue';\nimport { setFromProp } from '../tools.js';\n\nexport default function useBindProp(comp, prop, object) {\n  if (comp[prop]) {\n    const ref = toRef(comp, prop);\n    setFromProp(object, ref.value);\n    watch(ref, () => {\n      setFromProp(object, ref.value);\n    }, { deep: true });\n  }\n};\n","import { OrthographicCamera, Vector3 } from 'three';\nimport { watch } from 'vue';\nimport useBindProp from '../use/useBindProp.js';\n\nexport default {\n  inject: ['three'],\n  props: {\n    left: { type: Number, default: -1 },\n    right: { type: Number, default: 1 },\n    top: { type: Number, default: 1 },\n    bottom: { type: Number, default: -1 },\n    near: { type: Number, default: 0.1 },\n    far: { type: Number, default: 2000 },\n    zoom: { type: Number, default: 1 },\n    position: { type: [Object, Vector3], default: { x: 0, y: 0, z: 0 } },\n  },\n  created() {\n    this.camera = new OrthographicCamera(this.left, this.right, this.top, this.bottom, this.near, this.far);\n    useBindProp(this, 'position', this.camera.position);\n\n    ['left', 'right', 'top', 'bottom', 'near', 'far', 'zoom'].forEach(p => {\n      watch(() => this[p], () => {\n        this.camera[p] = this[p];\n        this.camera.updateProjectionMatrix();\n      });\n    });\n\n    this.three.camera = this.camera;\n  },\n  render() {\n    return [];\n  },\n  __hmrId: 'OrthographicCamera',\n};\n","import { PerspectiveCamera, Vector3 } from 'three';\nimport { watch } from 'vue';\nimport useBindProp from '../use/useBindProp.js';\n\nexport default {\n  inject: ['three'],\n  props: {\n    aspect: { type: Number, default: 1 },\n    far: { type: Number, default: 2000 },\n    fov: { type: Number, default: 50 },\n    near: { type: Number, default: 0.1 },\n    position: { type: [Object, Vector3], default: { x: 0, y: 0, z: 0 } },\n  },\n  created() {\n    this.camera = new PerspectiveCamera(this.fov, this.aspect, this.near, this.far);\n    useBindProp(this, 'position', this.camera.position);\n\n    ['aspect', 'far', 'fov', 'near'].forEach(p => {\n      watch(() => this[p], () => {\n        this.camera[p] = this[p];\n        this.camera.updateProjectionMatrix();\n      });\n    });\n\n    this.three.camera = this.camera;\n  },\n  render() {\n    return [];\n  },\n  __hmrId: 'PerspectiveCamera',\n};\n","import { Group } from 'three';\r\nimport useBindProp from '../use/useBindProp.js';\r\n\r\nexport default {\r\n  inject: {\r\n    three: 'three',\r\n    scene: 'scene',\r\n    group: { default: null },\r\n  },\r\n  props: {\r\n    position: Object,\r\n    rotation: Object,\r\n    scale: Object,\r\n  },\r\n  provide() {\r\n    return {\r\n      group: this.group,\r\n    };\r\n  },\r\n  created() {\r\n    this.parent = this.group ? this.group : this.scene;\r\n\r\n    this.group = new Group();\r\n    useBindProp(this, 'position', this.group.position);\r\n    useBindProp(this, 'rotation', this.group.rotation);\r\n    useBindProp(this, 'scale', this.group.scale);\r\n\r\n    this.parent.add(this.group);\r\n  },\r\n  unmounted() {\r\n    this.parent.remove(this.group);\r\n  },\r\n  render() {\r\n    if (this.$slots.default) {\r\n      return this.$slots.default();\r\n    }\r\n    return [];\r\n  },\r\n  __hmrId: 'Group',\r\n};\r\n","import { Scene, Color } from 'three';\nimport { watch } from 'vue';\n\nexport default {\n  inject: ['three'],\n  props: {\n    id: String,\n    background: [String, Number],\n  },\n  setup(props) {\n    const scene = new Scene();\n    if (props.background) scene.background = new Color(props.background);\n    watch(() => props.background, (value) => { scene.background = new Color(value); });\n    return { scene };\n  },\n  provide() {\n    return {\n      scene: this.scene,\n    };\n  },\n  mounted() {\n    if (!this.three.scene) {\n      this.three.scene = this.scene;\n    }\n  },\n  methods: {\n    // add(o) {\n    //   this.scene.add(o);\n    // },\n    // remove(o) {\n    //   this.scene.remove(o);\n    // },\n  },\n  render() {\n    if (this.$slots.default) {\n      return this.$slots.default();\n    }\n    return [];\n  },\n};\n","import { watch } from 'vue';\n\nexport default {\n  emits: ['ready'],\n  inject: ['mesh'],\n  props: {\n    rotateX: Number,\n    rotateY: Number,\n    rotateZ: Number,\n  },\n  created() {\n    if (!this.mesh) {\n      console.error('Missing parent Mesh');\n    }\n    this.watchProps = [];\n    Object.entries(this.$props).forEach(e => this.watchProps.push(e[0]));\n  },\n  beforeMount() {\n    this.createGeometry();\n    this.rotateGeometry();\n    this.mesh.setGeometry(this.geometry);\n  },\n  mounted() {\n    this.addWatchers();\n  },\n  unmounted() {\n    this.geometry.dispose();\n  },\n  methods: {\n    rotateGeometry() {\n      if (this.rotateX) this.geometry.rotateX(this.rotateX);\n      if (this.rotateY) this.geometry.rotateY(this.rotateY);\n      if (this.rotateZ) this.geometry.rotateZ(this.rotateZ);\n    },\n    addWatchers() {\n      this.watchProps.forEach(prop => {\n        watch(() => this[prop], () => {\n          this.refreshGeometry();\n        });\n      });\n    },\n    refreshGeometry() {\n      const oldGeo = this.geometry;\n      this.createGeometry();\n      this.rotateGeometry();\n      this.mesh.setGeometry(this.geometry);\n      oldGeo.dispose();\n    },\n  },\n  render() {\n    return [];\n  },\n};\n","import { BoxBufferGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    size: Number,\n    width: { type: Number, default: 1 },\n    height: { type: Number, default: 1 },\n    depth: { type: Number, default: 1 },\n    widthSegments: { type: Number, default: 1 },\n    heightSegments: { type: Number, default: 1 },\n    depthSegments: { type: Number, default: 1 },\n  },\n  methods: {\n    createGeometry() {\n      let w = this.width, h = this.height, d = this.depth;\n      if (this.size) {\n        w = this.size; h = this.size; d = this.size;\n      }\n      this.geometry = new BoxBufferGeometry(w, h, d, this.widthSegments, this.heightSegments, this.depthSegments);\n    },\n  },\n};\n","import { CircleBufferGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radius: { type: Number, default: 1 },\n    segments: { type: Number, default: 8 },\n    thetaStart: { type: Number, default: 0 },\n    thetaLength: { type: Number, default: Math.PI * 2 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new CircleBufferGeometry(this.radius, this.segments, this.thetaStart, this.thetaLength);\n    },\n  },\n};\n","import { ConeBufferGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radius: { type: Number, default: 1 },\n    height: { type: Number, default: 1 },\n    radialSegments: { type: Number, default: 8 },\n    heightSegments: { type: Number, default: 1 },\n    openEnded: { type: Boolean, default: false },\n    thetaStart: { type: Number, default: 0 },\n    thetaLength: { type: Number, default: Math.PI * 2 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new ConeBufferGeometry(this.radius, this.height, this.radialSegments, this.heightSegments, this.openEnded, this.thetaStart, this.thetaLength);\n    },\n  },\n};\n","import { CylinderBufferGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radiusTop: { type: Number, default: 1 },\n    radiusBottom: { type: Number, default: 1 },\n    height: { type: Number, default: 1 },\n    radialSegments: { type: Number, default: 8 },\n    heightSegments: { type: Number, default: 1 },\n    openEnded: { type: Boolean, default: false },\n    thetaStart: { type: Number, default: 0 },\n    thetaLength: { type: Number, default: Math.PI * 2 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new CylinderBufferGeometry(this.radiusTop, this.radiusBottom, this.height, this.radialSegments, this.heightSegments, this.openEnded, this.thetaStart, this.thetaLength);\n    },\n  },\n};\n","import { DodecahedronBufferGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new DodecahedronBufferGeometry(this.radius, this.detail);\n    },\n  },\n};\n","import { IcosahedronBufferGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new IcosahedronBufferGeometry(this.radius, this.detail);\n    },\n  },\n};\n","import { LatheBufferGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    points: Array,\n    segments: { type: Number, default: 12 },\n    phiStart: { type: Number, default: 0 },\n    phiLength: { type: Number, default: Math.PI * 2 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new LatheBufferGeometry(this.points, this.segments, this.phiStart, this.phiLength);\n    },\n  },\n};\n","import { OctahedronBufferGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new OctahedronBufferGeometry(this.radius, this.detail);\n    },\n  },\n};\n","import { PolyhedronBufferGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    vertices: Array,\n    indices: Array,\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new PolyhedronBufferGeometry(this.vertices, this.indices, this.radius, this.detail);\n    },\n  },\n};\n","import { RingBufferGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    innerRadius: { type: Number, default: 0.5 },\n    outerRadius: { type: Number, default: 1 },\n    thetaSegments: { type: Number, default: 8 },\n    phiSegments: { type: Number, default: 1 },\n    thetaStart: { type: Number, default: 0 },\n    thetaLength: { type: Number, default: Math.PI * 2 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new RingBufferGeometry(this.innerRadius, this.outerRadius, this.thetaSegments, this.phiSegments, this.thetaStart, this.thetaLength);\n    },\n  },\n};\n","import { SphereBufferGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radius: { type: Number, default: 1 },\n    widthSegments: { type: Number, default: 12 },\n    heightSegments: { type: Number, default: 12 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new SphereBufferGeometry(this.radius, this.widthSegments, this.heightSegments);\n    },\n  },\n};\n","import { TetrahedronBufferGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new TetrahedronBufferGeometry(this.radius, this.detail);\n    },\n  },\n};\n","import { TorusBufferGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radius: { type: Number, default: 1 },\n    tube: { type: Number, default: 0.4 },\n    radialSegments: { type: Number, default: 8 },\n    tubularSegments: { type: Number, default: 6 },\n    arc: { type: Number, default: Math.PI * 2 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new TorusBufferGeometry(this.radius, this.tube, this.radialSegments, this.tubularSegments, this.arc);\n    },\n  },\n};\n","import { TorusKnotBufferGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    radius: { type: Number, default: 1 },\n    tube: { type: Number, default: 0.4 },\n    radialSegments: { type: Number, default: 64 },\n    tubularSegments: { type: Number, default: 8 },\n    p: { type: Number, default: 2 },\n    q: { type: Number, default: 3 },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new TorusKnotBufferGeometry(this.radius, this.tube, this.radialSegments, this.tubularSegments, this.p, this.q);\n    },\n  },\n};\n","import { Curve, TubeBufferGeometry } from 'three';\nimport Geometry from './Geometry.js';\n\nexport default {\n  extends: Geometry,\n  props: {\n    path: Curve,\n    tubularSegments: { type: Number, default: 64 },\n    radius: { type: Number, default: 1 },\n    radiusSegments: { type: Number, default: 8 },\n    closed: { type: Boolean, default: false },\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new TubeBufferGeometry(this.path, this.tubularSegments, this.radius, this.radiusSegments, this.closed);\n    },\n  },\n};\n","import { Color } from 'three';\nimport { watch } from 'vue';\nimport { setFromProp } from '../tools.js';\nimport useBindProp from '../use/useBindProp.js';\n\nexport default {\n  inject: {\n    scene: 'scene',\n    group: { default: null },\n  },\n  props: {\n    color: {\n      type: String,\n      default: '#ffffff',\n    },\n    intensity: {\n      type: Number,\n      default: 1,\n    },\n    castShadow: {\n      type: Boolean,\n      default: false,\n    },\n    shadowMapSize: Object,\n    position: Object,\n  },\n  // can't use setup because it will not be used in sub components\n  // setup() {},\n  created() {\n    this.parent = this.group ? this.group : this.scene;\n  },\n  mounted() {\n    useBindProp(this, 'position', this.light.position);\n\n    if (this.light.target) {\n      useBindProp(this, 'target', this.light.target.position);\n    }\n\n    if (this.light.shadow) {\n      this.light.castShadow = this.castShadow;\n      setFromProp(this.light.shadow.mapSize, this.shadowMapSize);\n    }\n\n    ['color', 'intensity', 'castShadow'].forEach(p => {\n      watch(() => this[p], () => {\n        if (p === 'color') {\n          this.light.color = new Color(this.color);\n        } else {\n          this.light[p] = this[p];\n        }\n      });\n    });\n\n    this.parent.add(this.light);\n    if (this.light.target) this.parent.add(this.light.target);\n  },\n  unmounted() {\n    this.parent.remove(this.light);\n    if (this.light.target) this.parent.remove(this.light.target);\n  },\n  render() {\n    return [];\n  },\n  __hmrId: 'Light',\n};\n","import { AmbientLight } from 'three';\nimport Light from './Light.js';\n\nexport default {\n  extends: Light,\n  created() {\n    this.light = new AmbientLight(this.color, this.intensity);\n  },\n  __hmrId: 'AmbientLight',\n};\n","import { DirectionalLight } from 'three';\nimport Light from './Light.js';\n\nexport default {\n  extends: Light,\n  props: {\n    target: Object,\n  },\n  created() {\n    this.light = new DirectionalLight(this.color, this.intensity);\n  },\n  __hmrId: 'DirectionalLight',\n};\n","import { PointLight } from 'three';\nimport Light from './Light.js';\n\nexport default {\n  extends: Light,\n  props: {\n    distance: {\n      type: Number,\n      default: 0,\n    },\n    decay: {\n      type: Number,\n      default: 1,\n    },\n  },\n  created() {\n    this.light = new PointLight(this.color, this.intensity, this.distance, this.decay);\n  },\n  __hmrId: 'PointLight',\n};\n","import { SpotLight } from 'three';\nimport { watch } from 'vue';\nimport Light from './Light.js';\n\nexport default {\n  extends: Light,\n  props: {\n    angle: {\n      type: Number,\n      default: Math.PI / 3,\n    },\n    decay: {\n      type: Number,\n      default: 1,\n    },\n    distance: {\n      type: Number,\n      default: 0,\n    },\n    penumbra: {\n      type: Number,\n      default: 0,\n    },\n    target: Object,\n  },\n  created() {\n    this.light = new SpotLight(this.color, this.intensity, this.distance, this.angle, this.penumbra, this.decay);\n    ['angle', 'decay', 'distance', 'penumbra'].forEach(p => {\n      watch(() => this[p], () => {\n        this.light[p] = this[p];\n      });\n    });\n  },\n  __hmrId: 'SpotLight',\n};\n","import { watch } from 'vue';\nimport { FrontSide } from 'three';\n\nexport default {\n  inject: ['three', 'mesh'],\n  props: {\n    id: String,\n    color: { type: [String, Number], default: '#ffffff' },\n    depthTest: { type: Boolean, default: true },\n    depthWrite: { type: Boolean, default: true },\n    flatShading: Boolean,\n    fog: { type: Boolean, default: true },\n    opacity: { type: Number, default: 1 },\n    side: { type: Number, default: FrontSide },\n    transparent: Boolean,\n    vertexColors: Boolean,\n  },\n  provide() {\n    return {\n      material: this,\n    };\n  },\n  beforeMount() {\n    this.createMaterial();\n    if (this.id) this.three.materials[this.id] = this.material;\n    this.mesh.setMaterial(this.material);\n  },\n  mounted() {\n    this._addWatchers();\n    if (this.addWatchers) this.addWatchers();\n  },\n  unmounted() {\n    this.material.dispose();\n    if (this.id) delete this.three.materials[this.id];\n  },\n  methods: {\n    setProp(key, value, needsUpdate = false) {\n      this.material[key] = value;\n      this.material.needsUpdate = needsUpdate;\n    },\n    setTexture(texture, key = 'map') {\n      this.setProp(key, texture, true);\n    },\n    _addWatchers() {\n      // don't work for flatShading\n      ['color', 'depthTest', 'depthWrite', 'fog', 'opacity', 'side', 'transparent'].forEach(p => {\n        watch(() => this[p], () => {\n          if (p === 'color') {\n            this.material.color.set(this.color);\n          } else {\n            this.material[p] = this[p];\n          }\n        });\n      });\n    },\n  },\n  render() {\n    if (this.$slots.default) {\n      return this.$slots.default();\n    }\n    return [];\n  },\n  __hmrId: 'Material',\n};\n","import { MeshBasicMaterial } from 'three';\nimport { propsValues } from '../tools.js';\nimport Material from './Material';\n\nexport default {\n  extends: Material,\n  methods: {\n    createMaterial() {\n      this.material = new MeshBasicMaterial(propsValues(this.$props, ['id']));\n    },\n  },\n  __hmrId: 'BasicMaterial',\n};\n","import { MeshLambertMaterial } from 'three';\nimport { propsValues } from '../tools.js';\nimport Material from './Material';\n\nexport default {\n  extends: Material,\n  methods: {\n    createMaterial() {\n      this.material = new MeshLambertMaterial(propsValues(this.$props, ['id']));\n    },\n  },\n  __hmrId: 'LambertMaterial',\n};\n","import { MeshMatcapMaterial, TextureLoader } from 'three';\n// import { watch } from 'vue';\nimport { propsValues, getMatcapUrl } from '../tools.js';\nimport Material from './Material';\n\nexport default {\n  extends: Material,\n  props: {\n    src: String,\n    name: String,\n  },\n  methods: {\n    createMaterial() {\n      const src = this.name ? getMatcapUrl(this.name) : this.src;\n      const opts = propsValues(this.$props, ['id', 'src', 'name']);\n      opts.matcap = new TextureLoader().load(src);\n      this.material = new MeshMatcapMaterial(opts);\n    },\n  },\n  __hmrId: 'MatcapMaterial',\n};\n","import { MeshPhongMaterial } from 'three';\nimport { watch } from 'vue';\nimport { propsValues } from '../tools.js';\nimport Material from './Material';\n\nexport default {\n  extends: Material,\n  props: {\n    emissive: { type: [Number, String], default: 0 },\n    emissiveIntensity: { type: Number, default: 1 },\n    reflectivity: { type: Number, default: 1 },\n    shininess: { type: Number, default: 30 },\n    specular: { type: [String, Number], default: 0x111111 },\n  },\n  methods: {\n    createMaterial() {\n      this.material = new MeshPhongMaterial(propsValues(this.$props, ['id']));\n    },\n    addWatchers() {\n      ['emissive', 'emissiveIntensity', 'reflectivity', 'shininess', 'specular'].forEach(p => {\n        watch(() => this[p], (value) => {\n          if (p === 'emissive' || p === 'specular') {\n            this.material[p].set(value);\n          } else {\n            this.material[p] = value;\n          }\n        });\n      });\n    },\n  },\n  __hmrId: 'PhongMaterial',\n};\n","import { MeshStandardMaterial, Vector2 } from 'three';\nimport { watch } from 'vue';\nimport { propsValues } from '../tools.js';\nimport useBindProp from '../use/useBindProp.js';\nimport Material from './Material';\n\nconst props = {\n  aoMapIntensity: { type: Number, default: 1 },\n  bumpScale: { type: Number, default: 1 },\n  displacementBias: { type: Number, default: 0 },\n  displacementScale: { type: Number, default: 1 },\n  emissive: { type: [Number, String], default: 0 },\n  emissiveIntensity: { type: Number, default: 1 },\n  envMapIntensity: { type: Number, default: 1 },\n  lightMapIntensity: { type: Number, default: 1 },\n  metalness: { type: Number, default: 0 },\n  normalScale: { type: Object, default: () => new Vector2(1, 1) },\n  roughness: { type: Number, default: 1 },\n  refractionRatio: { type: Number, default: 0.98 },\n  wireframe: Boolean,\n};\n\nexport default {\n  extends: Material,\n  props,\n  methods: {\n    createMaterial() {\n      this.material = new MeshStandardMaterial(propsValues(this.$props, ['id', 'normalScale']));\n    },\n    addWatchers() {\n      // todo : use setProp ?\n      Object.keys(props).forEach(p => {\n        if (p === 'normalScale') return;\n        watch(() => this[p], (value) => {\n          if (p === 'emissive') {\n            this.material[p].set(value);\n          } else {\n            this.material[p] = value;\n          }\n        });\n      });\n      useBindProp(this, 'normalScale', this.material.normalScale);\n    },\n  },\n  __hmrId: 'StandardMaterial',\n};\n","import { MeshPhysicalMaterial } from 'three';\nimport { propsValues } from '../tools.js';\nimport StandardMaterial from './StandardMaterial';\n\nexport default {\n  extends: StandardMaterial,\n  methods: {\n    createMaterial() {\n      this.material = new MeshPhysicalMaterial(propsValues(this.$props, ['id']));\n    },\n  },\n  __hmrId: 'PhysicalMaterial',\n};\n","/**\n * ------------------------------------------------------------------------------------------\n * Subsurface Scattering shader\n * Based on three/examples/jsm/shaders/SubsurfaceScatteringShader.js\n * Based on GDC 2011 – Approximating Translucency for a Fast, Cheap and Convincing Subsurface Scattering Look\n * https://colinbarrebrisebois.com/2011/03/07/gdc-2011-approximating-translucency-for-a-fast-cheap-and-convincing-subsurface-scattering-look/\n *------------------------------------------------------------------------------------------\n */\nimport {\n  Color,\n  ShaderChunk,\n  ShaderLib,\n  UniformsUtils,\n} from 'three';\n\nfunction replaceAll(string, find, replace) {\n  return string.split(find).join(replace);\n}\n\nconst meshphongFragHead = ShaderChunk.meshphong_frag.slice(0, ShaderChunk.meshphong_frag.indexOf('void main() {'));\nconst meshphongFragBody = ShaderChunk.meshphong_frag.slice(ShaderChunk.meshphong_frag.indexOf('void main() {'));\n\nconst SubsurfaceScatteringShader = {\n\n  uniforms: UniformsUtils.merge([\n    ShaderLib.phong.uniforms,\n    {\n      thicknessColor: { value: new Color(0x668597) },\n      thicknessDistortion: { value: 0.1 },\n      thicknessAmbient: { value: 0.0 },\n      thicknessAttenuation: { value: 0.1 },\n      thicknessPower: { value: 2.0 },\n      thicknessScale: { value: 10.0 },\n    },\n  ]),\n\n  vertexShader: `\n    #define USE_UV\n    ${ShaderChunk.meshphong_vert}\n  `,\n\n  fragmentShader: `\n    #define USE_UV\n    #define SUBSURFACE\n\n    ${meshphongFragHead}\n\n    uniform float thicknessPower;\n    uniform float thicknessScale;\n    uniform float thicknessDistortion;\n    uniform float thicknessAmbient;\n    uniform float thicknessAttenuation;\n    uniform vec3 thicknessColor;\n\n    void RE_Direct_Scattering(const in IncidentLight directLight, const in vec2 uv, const in GeometricContext geometry, inout ReflectedLight reflectedLight) {\n      #ifdef USE_COLOR\n        vec3 thickness = vColor * thicknessColor;\n      #else\n        vec3 thickness = thicknessColor;\n      #endif\n      vec3 scatteringHalf = normalize(directLight.direction + (geometry.normal * thicknessDistortion));\n      float scatteringDot = pow(saturate(dot(geometry.viewDir, -scatteringHalf)), thicknessPower) * thicknessScale;\n      vec3 scatteringIllu = (scatteringDot + thicknessAmbient) * thickness;\n      reflectedLight.directDiffuse += scatteringIllu * thicknessAttenuation * directLight.color;\n    }\n  ` + meshphongFragBody.replace(\n    '#include <lights_fragment_begin>',\n    replaceAll(\n      ShaderChunk.lights_fragment_begin,\n      'RE_Direct( directLight, geometry, material, reflectedLight );',\n      `\n        RE_Direct( directLight, geometry, material, reflectedLight );\n        #if defined( SUBSURFACE ) && defined( USE_UV )\n          RE_Direct_Scattering(directLight, vUv, geometry, reflectedLight);\n        #endif\n      `\n    )\n  ),\n};\n\nexport default SubsurfaceScatteringShader;\n","import { Color, ShaderMaterial as TShaderMaterial, UniformsUtils } from 'three';\nimport SubsurfaceScatteringShader from './SubsurfaceScatteringShader.js';\nimport ShaderMaterial from './ShaderMaterial';\n\nexport default {\n  extends: ShaderMaterial,\n  props: {\n    color: { type: String, default: '#ffffff' },\n    thicknessColor: { type: String, default: '#ffffff' },\n    thicknessDistortion: { type: Number, default: 0.4 },\n    thicknessAmbient: { type: Number, default: 0.01 },\n    thicknessAttenuation: { type: Number, default: 0.7 },\n    thicknessPower: { type: Number, default: 2 },\n    thicknessScale: { type: Number, default: 4 },\n    transparent: { type: Boolean, default: false },\n    opacity: { type: Number, default: 1 },\n    vertexColors: { type: Boolean, default: false },\n  },\n  methods: {\n    createMaterial() {\n      const params = SubsurfaceScatteringShader;\n      const uniforms = UniformsUtils.clone(params.uniforms);\n\n      Object.entries(this.$props).forEach(([key, value]) => {\n        let _key = key, _value = value;\n        if (['color', 'thicknessColor'].includes(key)) {\n          if (key === 'color') _key = 'diffuse';\n          _value = new Color(value);\n        }\n        if (!['id', 'transparent', 'vertexColors'].includes(key)) {\n          uniforms[_key].value = _value;\n        }\n      });\n\n      this.material = new TShaderMaterial({\n        ...params,\n        uniforms,\n        lights: true,\n        transparent: this.transparent,\n        vertexColors: this.vertexColors,\n      });\n    },\n  },\n  __hmrId: 'SubSurfaceMaterial',\n};\n","export default {\n  inject: ['three', 'mesh'],\n  props: {\n    id: String,\n    uniforms: Object,\n    vertexShader: String,\n    fragmentShader: String,\n  },\n  beforeMount() {\n    this.createMaterial();\n    if (this.id) this.three.materials[this.id] = this.material;\n    this.mesh.setMaterial(this.material);\n  },\n  mounted() {\n    if (this.addWatchers) this.addWatchers();\n  },\n  unmounted() {\n    this.material.dispose();\n    if (this.id) delete this.three.materials[this.id];\n  },\n  render() {\n    return [];\n  },\n  __hmrId: 'ShaderMaterial',\n};\n","import { MeshToonMaterial } from 'three';\nimport { propsValues } from '../tools.js';\nimport Material from './Material';\n\nexport default {\n  extends: Material,\n  methods: {\n    createMaterial() {\n      this.material = new MeshToonMaterial(propsValues(this.$props, ['id']));\n    },\n  },\n  __hmrId: 'ToonMaterial',\n};\n","import { TextureLoader } from 'three';\nimport { watch } from 'vue';\n\nexport default {\n  inject: ['material'],\n  emits: ['loaded'],\n  props: {\n    src: String,\n    onLoad: Function,\n    onProgress: Function,\n    onError: Function,\n    id: { type: String, default: 'map' },\n  },\n  created() {\n    this.refreshTexture();\n    watch(() => this.src, this.refreshTexture);\n  },\n  unmounted() {\n    this.material.setTexture(null, this.id);\n    this.texture.dispose();\n  },\n  methods: {\n    createTexture() {\n      this.texture = new TextureLoader().load(this.src, this.onLoaded, this.onProgress, this.onError);\n    },\n    refreshTexture() {\n      this.createTexture();\n      this.material.setTexture(this.texture, this.id);\n    },\n    onLoaded() {\n      if (this.onLoad) this.onLoad();\n      this.$emit('loaded');\n    },\n  },\n  render() {\n    return [];\n  },\n};\n","import { CubeTextureLoader, CubeRefractionMapping } from 'three';\nimport { watch } from 'vue';\n\nexport default {\n  inject: ['material'],\n  emits: ['loaded'],\n  props: {\n    path: String,\n    urls: {\n      type: Array,\n      default: ['px.jpg', 'nx.jpg', 'py.jpg', 'ny.jpg', 'pz.jpg', 'nz.jpg'],\n    },\n    onLoad: Function,\n    onProgress: Function,\n    onError: Function,\n    id: { type: String, default: 'envMap' },\n    refraction: Boolean,\n    // todo: remove ?\n    refractionRatio: { type: Number, default: 0.98 },\n  },\n  created() {\n    this.refreshTexture();\n    watch(() => this.path, this.refreshTexture);\n    watch(() => this.urls, this.refreshTexture);\n  },\n  unmounted() {\n    this.material.setTexture(null, this.id);\n    this.texture.dispose();\n  },\n  methods: {\n    createTexture() {\n      this.texture = new CubeTextureLoader()\n        .setPath(this.path)\n        .load(this.urls, this.onLoaded, this.onProgress, this.onError);\n    },\n    refreshTexture() {\n      this.createTexture();\n      this.material.setTexture(this.texture, this.id);\n      if (this.refraction) {\n        this.texture.mapping = CubeRefractionMapping;\n        this.material.setProp('refractionRatio', this.refractionRatio);\n      }\n    },\n    onLoaded() {\n      if (this.onLoad) this.onLoad();\n      this.$emit('loaded');\n    },\n  },\n  render() {\n    return [];\n  },\n};\n","import { Mesh } from 'three';\nimport { watch } from 'vue';\nimport useBindProp from '../use/useBindProp.js';\n\nexport default {\n  inject: {\n    three: 'three',\n    scene: 'scene',\n    rendererComponent: 'rendererComponent',\n    group: { default: null },\n  },\n  emits: ['ready'],\n  props: {\n    materialId: String,\n    position: Object,\n    rotation: Object,\n    scale: Object,\n    castShadow: Boolean,\n    receiveShadow: Boolean,\n    onHover: Function,\n    onClick: Function,\n  },\n  // can't use setup because it will not be used in sub components\n  // setup() {},\n  created() {\n    this.parent = this.group ? this.group : this.scene;\n  },\n  provide() {\n    return {\n      mesh: this,\n    };\n  },\n  mounted() {\n    if (this.geometry && !this.mesh) this.initMesh();\n  },\n  unmounted() {\n    if (this.mesh) {\n      this.three.removeIntersectObject(this.mesh);\n      this.parent.remove(this.mesh);\n    }\n    if (this.geometry) this.geometry.dispose();\n    if (this.material && !this.materialId) this.material.dispose();\n  },\n  methods: {\n    initMesh() {\n      if (!this.material && this.materialId) {\n        this.material = this.three.materials[this.materialId];\n      }\n      this.mesh = new Mesh(this.geometry, this.material);\n\n      if (this.onHover) {\n        this.mesh.onHover = (over) => { this.onHover({ component: this, over }); };\n        this.three.addIntersectObject(this.mesh);\n      }\n\n      if (this.onClick) {\n        this.mesh.onClick = (e) => { this.onClick({ component: this, event: e }); };\n        this.three.addIntersectObject(this.mesh);\n      }\n\n      this.bindProps();\n      this.parent.add(this.mesh);\n      this.$emit('ready');\n    },\n    bindProps() {\n      useBindProp(this, 'position', this.mesh.position);\n      useBindProp(this, 'rotation', this.mesh.rotation);\n      useBindProp(this, 'scale', this.mesh.scale);\n\n      ['castShadow', 'receiveShadow'].forEach(p => {\n        this.mesh[p] = this[p];\n        watch(() => this[p], () => { this.mesh[p] = this[p]; });\n      });\n\n      watch(() => this.materialId, () => {\n        this.mesh.material = this.three.materials[this.materialId];\n      });\n    },\n    setGeometry(geometry) {\n      this.geometry = geometry;\n      if (this.mesh) this.mesh.geometry = geometry;\n    },\n    setMaterial(material) {\n      this.material = material;\n      if (this.mesh) this.mesh.material = material;\n    },\n    refreshGeometry() {\n      const oldGeo = this.geometry;\n      this.createGeometry();\n      this.mesh.geometry = this.geometry;\n      oldGeo.dispose();\n    },\n  },\n  render() {\n    if (this.$slots.default) {\n      return this.$slots.default();\n    }\n    return [];\n  },\n  __hmrId: 'Mesh',\n};\n","import { BoxBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    size: Number,\n    width: { type: Number, default: 1 },\n    height: { type: Number, default: 1 },\n    depth: { type: Number, default: 1 },\n    widthSegments: { type: Number, default: 1 },\n    heightSegments: { type: Number, default: 1 },\n    depthSegments: { type: Number, default: 1 },\n  },\n  created() {\n    this.createGeometry();\n\n    ['size', 'width', 'height', 'depth', 'widthSegments', 'heightSegments', 'depthSegments'].forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      if (this.size) {\n        this.geometry = new BoxBufferGeometry(this.size, this.size, this.size);\n      } else {\n        this.geometry = new BoxBufferGeometry(this.width, this.height, this.depth);\n      }\n    },\n  },\n  __hmrId: 'Box',\n};\n","import { CircleBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radius: { type: Number, default: 1 },\n    segments: { type: Number, default: 8 },\n    thetaStart: { type: Number, default: 0 },\n    thetaLength: { type: Number, default: Math.PI * 2 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['radius', 'segments', 'thetaStart', 'thetaLength'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new CircleBufferGeometry(this.radius, this.segments, this.thetaStart, this.thetaLength);\n    },\n  },\n  __hmrId: 'Circle',\n};\n","import { ConeBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radius: { type: Number, default: 1 },\n    height: { type: Number, default: 1 },\n    radialSegments: { type: Number, default: 8 },\n    heightSegments: { type: Number, default: 1 },\n    openEnded: { type: Boolean, default: false },\n    thetaStart: { type: Number, default: 0 },\n    thetaLength: { type: Number, default: Math.PI * 2 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['radius', 'height', 'radialSegments', 'heightSegments', 'openEnded', 'thetaStart', 'thetaLength'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new ConeBufferGeometry(this.radius, this.height, this.radialSegments, this.heightSegments, this.openEnded, this.thetaStart, this.thetaLength);\n    },\n  },\n  __hmrId: 'Cone',\n};\n","import { CylinderBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radiusTop: { type: Number, default: 1 },\n    radiusBottom: { type: Number, default: 1 },\n    height: { type: Number, default: 1 },\n    radialSegments: { type: Number, default: 8 },\n    heightSegments: { type: Number, default: 1 },\n    openEnded: { type: Boolean, default: false },\n    thetaStart: { type: Number, default: 0 },\n    thetaLength: { type: Number, default: Math.PI * 2 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['radiusTop', 'radiusBottom', 'height', 'radialSegments', 'heightSegments', 'openEnded', 'thetaStart', 'thetaLength'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new CylinderBufferGeometry(this.radiusTop, this.radiusBottom, this.height, this.radialSegments, this.heightSegments, this.openEnded, this.thetaStart, this.thetaLength);\n    },\n  },\n  __hmrId: 'Cylinder',\n};\n","import { DodecahedronBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['radius', 'detail'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new DodecahedronBufferGeometry(this.radius, this.detail);\n    },\n  },\n  __hmrId: 'Dodecahedron',\n};\n","import { IcosahedronBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['radius', 'detail'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new IcosahedronBufferGeometry(this.radius, this.detail);\n    },\n  },\n  __hmrId: 'Icosahedron',\n};\n","import { LatheBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    points: Array,\n    segments: { type: Number, default: 12 },\n    phiStart: { type: Number, default: 0 },\n    phiLength: { type: Number, default: Math.PI * 2 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['points', 'segments', 'phiStart', 'phiLength'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new LatheBufferGeometry(this.points, this.segments, this.phiStart, this.phiLength);\n    },\n  },\n  __hmrId: 'Lathe',\n};\n","import { OctahedronBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['radius', 'detail'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new OctahedronBufferGeometry(this.radius, this.detail);\n    },\n  },\n  __hmrId: 'Octahedron',\n};\n","import { PlaneBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    width: { type: Number, default: 1 },\n    height: { type: Number, default: 1 },\n    widthSegments: { type: Number, default: 1 },\n    heightSegments: { type: Number, default: 1 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['width', 'height', 'widthSegments', 'heightSegments'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n    },\n  },\n  __hmrId: 'Plane',\n};\n","import { PolyhedronBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    vertices: Array,\n    indices: Array,\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['vertices', 'indices', 'radius', 'detail'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new PolyhedronBufferGeometry(this.vertices, this.indices, this.radius, this.detail);\n    },\n  },\n  __hmrId: 'Polyhedron',\n};\n","import { RingBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    innerRadius: { type: Number, default: 0.5 },\n    outerRadius: { type: Number, default: 1 },\n    thetaSegments: { type: Number, default: 8 },\n    phiSegments: { type: Number, default: 1 },\n    thetaStart: { type: Number, default: 0 },\n    thetaLength: { type: Number, default: Math.PI * 2 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['innerRadius', 'outerRadius', 'thetaSegments', 'phiSegments', 'thetaStart', 'thetaLength'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new RingBufferGeometry(this.innerRadius, this.outerRadius, this.thetaSegments, this.phiSegments, this.thetaStart, this.thetaLength);\n    },\n  },\n  __hmrId: 'Ring',\n};\n","import { SphereBufferGeometry } from 'three';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radius: Number,\n    widthSegments: { type: Number, default: 12 },\n    heightSegments: { type: Number, default: 12 },\n  },\n  watch: {\n    radius() { this.refreshGeometry(); },\n    widthSegments() { this.refreshGeometry(); },\n    heightSegments() { this.refreshGeometry(); },\n  },\n  created() {\n    this.createGeometry();\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new SphereBufferGeometry(this.radius, this.widthSegments, this.heightSegments);\n    },\n  },\n  __hmrId: 'Sphere',\n};\n","import { TetrahedronBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radius: { type: Number, default: 1 },\n    detail: { type: Number, default: 0 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['radius', 'detail'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new TetrahedronBufferGeometry(this.radius, this.detail);\n    },\n  },\n  __hmrId: 'Tetrahedron',\n};\n","export default {\n  text: String,\n  fontSrc: String,\n  size: { type: Number, default: 80 },\n  height: { type: Number, default: 5 },\n  depth: { type: Number, default: 1 },\n  curveSegments: { type: Number, default: 12 },\n  bevelEnabled: { type: Boolean, default: false },\n  bevelThickness: { type: Number, default: 10 },\n  bevelSize: { type: Number, default: 8 },\n  bevelOffset: { type: Number, default: 0 },\n  bevelSegments: { type: Number, default: 5 },\n  align: { type: [Boolean, String], default: false },\n};\n","import { FontLoader, TextBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\nimport TextProps from './TextProps.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    ...TextProps,\n  },\n  created() {\n    // add watchers\n    const watchProps = [\n      'text', 'size', 'height', 'curveSegments',\n      'bevelEnabled', 'bevelThickness', 'bevelSize', 'bevelOffset', 'bevelSegments',\n      'align',\n    ];\n    watchProps.forEach(p => {\n      watch(() => this[p], () => {\n        if (this.font) this.refreshGeometry();\n      });\n    });\n\n    const loader = new FontLoader();\n    loader.load(this.fontSrc, (font) => {\n      this.font = font;\n      this.createGeometry();\n      this.initMesh();\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new TextBufferGeometry(this.text, {\n        font: this.font,\n        size: this.size,\n        height: this.height,\n        depth: this.depth,\n        curveSegments: this.curveSegments,\n        bevelEnabled: this.bevelEnabled,\n        bevelThickness: this.bevelThickness,\n        bevelSize: this.bevelSize,\n        bevelOffset: this.bevelOffset,\n        bevelSegments: this.bevelSegments,\n      });\n\n      if (this.align === 'center') {\n        this.geometry.center();\n      }\n    },\n  },\n};\n","import { TorusBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radius: { type: Number, default: 0.5 },\n    tube: { type: Number, default: 0.4 },\n    radialSegments: { type: Number, default: 8 },\n    tubularSegments: { type: Number, default: 6 },\n    arc: { type: Number, default: Math.PI * 2 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['radius', 'tube', 'radialSegments', 'tubularSegments', 'arc'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new TorusBufferGeometry(this.radius, this.tube, this.radialSegments, this.tubularSegments, this.arc);\n    },\n  },\n  __hmrId: 'Torus',\n};\n","import { TorusKnotBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    radius: { type: Number, default: 0.5 },\n    tube: { type: Number, default: 0.4 },\n    tubularSegments: { type: Number, default: 64 },\n    radialSegments: { type: Number, default: 8 },\n    p: { type: Number, default: 2 },\n    q: { type: Number, default: 3 },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['radius', 'tube', 'radialSegments', 'tubularSegments', 'p', 'q'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new TorusKnotBufferGeometry(this.radius, this.tube, this.tubularSegments, this.radialSegments, this.p, this.q);\n    },\n  },\n  __hmrId: 'TorusKnot',\n};\n","import { Curve, TubeBufferGeometry } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    path: Curve,\n    tubularSegments: { type: Number, default: 64 },\n    radius: { type: Number, default: 1 },\n    radialSegments: { type: Number, default: 8 },\n    closed: { type: Boolean, default: false },\n  },\n  created() {\n    this.createGeometry();\n\n    const watchProps = ['path', 'tubularSegments', 'radius', 'radialSegments', 'closed'];\n    watchProps.forEach(prop => {\n      watch(() => this[prop], () => {\n        this.refreshGeometry();\n      });\n    });\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new TubeBufferGeometry(this.path, this.tubularSegments, this.radius, this.radialSegments, this.closed);\n    },\n  },\n  __hmrId: 'Tube',\n};\n","import {\n  BackSide,\n  CubeCamera,\n  FrontSide,\n  LinearMipmapLinearFilter,\n  Mesh as TMesh,\n  RGBFormat,\n  WebGLCubeRenderTarget,\n} from 'three';\n// import { watch } from 'vue';\nimport Mesh from '../meshes/Mesh.js';\nimport useBindProp from '../use/useBindProp.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    cubeRTSize: { type: Number, default: 256 },\n    cubeCameraNear: { type: Number, default: 0.1 },\n    cubeCameraFar: { type: Number, default: 2000 },\n    autoUpdate: Boolean,\n  },\n  mounted() {\n    this.initGem();\n    if (this.autoUpdate) this.three.onBeforeRender(this.updateCubeRT);\n    else this.rendererComponent.onMounted(this.updateCubeRT);\n  },\n  unmounted() {\n    this.three.offBeforeRender(this.updateCubeRT);\n    if (this.meshBack) this.parent.remove(this.meshBack);\n    if (this.materialBack) this.materialBack.dispose();\n  },\n  methods: {\n    initGem() {\n      const cubeRT = new WebGLCubeRenderTarget(this.cubeRTSize, { format: RGBFormat, generateMipmaps: true, minFilter: LinearMipmapLinearFilter });\n      this.cubeCamera = new CubeCamera(this.cubeCameraNear, this.cubeCameraFar, cubeRT);\n      useBindProp(this, 'position', this.cubeCamera.position);\n      this.parent.add(this.cubeCamera);\n\n      this.material.side = FrontSide;\n      this.material.envMap = cubeRT.texture;\n      this.material.envMapIntensity = 10;\n      this.material.metalness = 0;\n      this.material.roughness = 0;\n      this.material.opacity = 0.75;\n      this.material.transparent = true;\n      this.material.premultipliedAlpha = true;\n      this.material.needsUpdate = true;\n\n      this.materialBack = this.material.clone();\n      this.materialBack.side = BackSide;\n      this.materialBack.envMapIntensity = 5;\n      this.materialBack.metalness = 1;\n      this.materialBack.roughness = 0;\n      this.materialBack.opacity = 0.5;\n\n      this.meshBack = new TMesh(this.geometry, this.materialBack);\n\n      useBindProp(this, 'position', this.meshBack.position);\n      useBindProp(this, 'rotation', this.meshBack.rotation);\n      useBindProp(this, 'scale', this.meshBack.scale);\n      this.parent.add(this.meshBack);\n    },\n    updateCubeRT() {\n      this.mesh.visible = false;\n      this.meshBack.visible = false;\n      this.cubeCamera.update(this.three.renderer, this.scene);\n      this.mesh.visible = true;\n      this.meshBack.visible = true;\n    },\n  },\n  __hmrId: 'Gem',\n};\n","import { DoubleSide, MeshBasicMaterial, PlaneBufferGeometry, TextureLoader } from 'three';\nimport { watch } from 'vue';\nimport Mesh from './Mesh.js';\n\nexport default {\n  emits: ['loaded'],\n  extends: Mesh,\n  props: {\n    src: String,\n    width: Number,\n    height: Number,\n    keepSize: Boolean,\n  },\n  created() {\n    this.createGeometry();\n    this.createMaterial();\n    this.initMesh();\n\n    watch(() => this.src, this.refreshTexture);\n\n    ['width', 'height'].forEach(p => {\n      watch(() => this[p], this.resize);\n    });\n\n    if (this.keepSize) this.three.onAfterResize(this.resize);\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new PlaneBufferGeometry(1, 1, 1, 1);\n    },\n    createMaterial() {\n      this.material = new MeshBasicMaterial({ side: DoubleSide, map: this.loadTexture() });\n    },\n    loadTexture() {\n      return new TextureLoader().load(this.src, this.onLoaded);\n    },\n    refreshTexture() {\n      if (this.texture) this.texture.dispose();\n      this.material.map = this.loadTexture();\n      this.material.needsUpdate = true;\n    },\n    onLoaded(texture) {\n      this.texture = texture;\n      this.resize();\n      this.$emit('loaded');\n    },\n    resize() {\n      if (!this.texture) return;\n      const screen = this.three.size;\n      const iW = this.texture.image.width;\n      const iH = this.texture.image.height;\n      const iRatio = iW / iH;\n      let w, h;\n      if (this.width && this.height) {\n        w = this.width * screen.wWidth / screen.width;\n        h = this.height * screen.wHeight / screen.height;\n      } else if (this.width) {\n        w = this.width * screen.wWidth / screen.width;\n        h = w / iRatio;\n      } else if (this.height) {\n        h = this.height * screen.wHeight / screen.height;\n        w = h * iRatio;\n      }\n      this.mesh.scale.x = w;\n      this.mesh.scale.y = h;\n    },\n  },\n  __hmrId: 'Image',\n};\n","import { InstancedMesh } from 'three';\nimport { watch } from 'vue';\nimport useBindProp from '../use/useBindProp.js';\n\nexport default {\n  inject: {\n    three: 'three',\n    scene: 'scene',\n    group: { default: null },\n  },\n  props: {\n    materialId: String,\n    count: Number,\n    position: Object,\n    castShadow: Boolean,\n    receiveShadow: Boolean,\n  },\n  provide() {\n    return {\n      mesh: this,\n    };\n  },\n  created() {\n    this.parent = this.group ? this.group : this.scene;\n  },\n  beforeMount() {\n    if (!this.$slots.default) {\n      console.error('Missing Geometry');\n    }\n  },\n  mounted() {\n    this.initMesh();\n  },\n  unmounted() {\n    this.parent.remove(this.mesh);\n  },\n  methods: {\n    initMesh() {\n      if (!this.material && this.materialId) {\n        this.material = this.three.materials[this.materialId];\n      }\n\n      this.mesh = new InstancedMesh(this.geometry, this.material, this.count);\n\n      useBindProp(this, 'position', this.mesh.position);\n      useBindProp(this, 'rotation', this.mesh.rotation);\n      useBindProp(this, 'scale', this.mesh.scale);\n\n      ['castShadow', 'receiveShadow'].forEach(p => {\n        this.mesh[p] = this[p];\n        watch(() => this[p], () => { this.mesh[p] = this[p]; });\n      });\n\n      // watch(() => this.materialId, () => {\n      //   this.mesh.material = this.three.materials[this.materialId];\n      // });\n\n      this.parent.add(this.mesh);\n    },\n    setGeometry(geometry) {\n      this.geometry = geometry;\n      if (this.mesh) this.mesh.geometry = geometry;\n    },\n    setMaterial(material) {\n      this.material = material;\n      if (this.mesh) this.mesh.material = material;\n    },\n  },\n  render() {\n    return this.$slots.default();\n  },\n  __hmrId: 'InstancedMesh',\n};\n","import {\n  CubeCamera,\n  LinearMipmapLinearFilter,\n  RGBFormat,\n  WebGLCubeRenderTarget,\n} from 'three';\n// import { watch } from 'vue';\nimport Mesh from './Mesh.js';\nimport useBindProp from '../use/useBindProp.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    cubeRTSize: { type: Number, default: 256 },\n    cubeCameraNear: { type: Number, default: 0.1 },\n    cubeCameraFar: { type: Number, default: 2000 },\n    autoUpdate: Boolean,\n  },\n  mounted() {\n    this.initMirrorMesh();\n    if (this.autoUpdate) this.three.onBeforeRender(this.updateCubeRT);\n    else this.rendererComponent.onMounted(this.updateCubeRT);\n  },\n  unmounted() {\n    this.three.offBeforeRender(this.updateCubeRT);\n    if (this.cubeCamera) this.parent.remove(this.cubeCamera);\n  },\n  methods: {\n    initMirrorMesh() {\n      const cubeRT = new WebGLCubeRenderTarget(this.cubeRTSize, { format: RGBFormat, generateMipmaps: true, minFilter: LinearMipmapLinearFilter });\n      this.cubeCamera = new CubeCamera(this.cubeCameraNear, this.cubeCameraFar, cubeRT);\n      this.parent.add(this.cubeCamera);\n\n      this.material.envMap = cubeRT.texture;\n      this.material.needsUpdate = true;\n    },\n    updateCubeRT() {\n      this.mesh.visible = false;\n      this.cubeCamera.update(this.three.renderer, this.scene);\n      this.mesh.visible = true;\n    },\n  },\n  __hmrId: 'MirrorMesh',\n};\n","import {\n  CubeCamera,\n  CubeRefractionMapping,\n  LinearMipmapLinearFilter,\n  RGBFormat,\n  WebGLCubeRenderTarget,\n} from 'three';\n// import { watch } from 'vue';\nimport Mesh from './Mesh.js';\nimport useBindProp from '../use/useBindProp.js';\n\nexport default {\n  extends: Mesh,\n  props: {\n    cubeRTSize: { type: Number, default: 256 },\n    cubeCameraNear: { type: Number, default: 0.1 },\n    cubeCameraFar: { type: Number, default: 2000 },\n    refractionRatio: { type: Number, default: 0.98 },\n    autoUpdate: Boolean,\n  },\n  mounted() {\n    this.initMirrorMesh();\n    if (this.autoUpdate) this.three.onBeforeRender(this.updateCubeRT);\n    else this.rendererComponent.onMounted(this.updateCubeRT);\n  },\n  unmounted() {\n    this.three.offBeforeRender(this.updateCubeRT);\n    if (this.cubeCamera) this.parent.remove(this.cubeCamera);\n  },\n  methods: {\n    initMirrorMesh() {\n      const cubeRT = new WebGLCubeRenderTarget(this.cubeRTSize, { mapping: CubeRefractionMapping, format: RGBFormat, generateMipmaps: true, minFilter: LinearMipmapLinearFilter });\n      this.cubeCamera = new CubeCamera(this.cubeCameraNear, this.cubeCameraFar, cubeRT);\n      useBindProp(this, 'position', this.cubeCamera.position);\n      this.parent.add(this.cubeCamera);\n\n      this.material.envMap = cubeRT.texture;\n      this.material.refractionRatio = this.refractionRatio;\n      this.material.needsUpdate = true;\n    },\n    updateCubeRT() {\n      this.mesh.visible = false;\n      this.cubeCamera.update(this.three.renderer, this.scene);\n      this.mesh.visible = true;\n    },\n  },\n  __hmrId: 'RefractionMesh',\n};\n","import { Sprite, SpriteMaterial, TextureLoader } from 'three';\nimport useBindProp from '../use/useBindProp.js';\n\nexport default {\n  emits: ['ready', 'loaded'],\n  inject: {\n    three: 'three',\n    scene: 'scene',\n    group: { default: null },\n  },\n  props: {\n    src: String,\n    position: Object,\n    scale: Object,\n  },\n  created() {\n    this.parent = this.group ? this.group : this.scene;\n  },\n  mounted() {\n    this.texture = new TextureLoader().load(this.src, this.onLoaded);\n    this.material = new SpriteMaterial({ map: this.texture });\n    this.sprite = new Sprite(this.material);\n    this.geometry = this.sprite.geometry;\n    useBindProp(this, 'position', this.sprite.position);\n    useBindProp(this, 'scale', this.sprite.scale);\n\n    this.parent.add(this.sprite);\n    this.$emit('ready');\n  },\n  unmounted() {\n    this.texture.dispose();\n    this.material.dispose();\n    this.parent.remove(this.sprite);\n  },\n  methods: {\n    onLoaded() {\n      this.updateUV();\n      this.$emit('loaded');\n    },\n    updateUV() {\n      this.iWidth = this.texture.image.width;\n      this.iHeight = this.texture.image.height;\n      this.iRatio = this.iWidth / this.iHeight;\n\n      let x = 0.5, y = 0.5;\n      if (this.iRatio > 1) {\n        y = 0.5 / this.iRatio;\n      } else {\n        x = 0.5 / this.iRatio;\n      }\n\n      const positions = this.geometry.attributes.position.array;\n      positions[0] = -x; positions[1] = -y;\n      positions[5] = x; positions[6] = -y;\n      positions[10] = x; positions[11] = y;\n      positions[15] = -x; positions[16] = y;\n      this.geometry.attributes.position.needsUpdate = true;\n    },\n  },\n  render() {\n    return [];\n  },\n  __hmrId: 'Sprite',\n};\n","import { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\n\nexport default {\n  setup() {\n    return {\n      passes: [],\n    };\n  },\n  inject: ['three'],\n  provide() {\n    return {\n      passes: this.passes,\n    };\n  },\n  mounted() {\n    this.three.onAfterInit(() => {\n      this.composer = new EffectComposer(this.three.renderer);\n      this.three.renderer.autoClear = false;\n      this.passes.forEach(pass => {\n        this.composer.addPass(pass);\n      });\n      this.three.composer = this.composer;\n\n      this.resize();\n      this.three.onAfterResize(this.resize);\n    });\n  },\n  unmounted() {\n    this.three.offAfterResize(this.resize);\n  },\n  methods: {\n    resize() {\n      this.composer.setSize(this.three.size.width, this.three.size.height);\n    },\n  },\n  render() {\n    return this.$slots.default();\n  },\n  __hmrId: 'EffectComposer',\n};\n","export default {\n  inject: ['three', 'passes'],\n  beforeMount() {\n    if (!this.passes) {\n      console.error('Missing parent EffectComposer');\n    }\n  },\n  unmounted() {\n    if (this.pass.dispose) this.pass.dispose();\n  },\n  render() {\n    return [];\n  },\n  __hmrId: 'EffectPass',\n};\n","import { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport EffectPass from './EffectPass.js';\n\nexport default {\n  extends: EffectPass,\n  mounted() {\n    if (!this.three.scene) {\n      console.error('Missing Scene');\n    }\n    if (!this.three.camera) {\n      console.error('Missing Camera');\n    }\n    const pass = new RenderPass(this.three.scene, this.three.camera);\n    this.passes.push(pass);\n    this.pass = pass;\n  },\n  __hmrId: 'RenderPass',\n};\n","import { BokehPass } from 'three/examples/jsm/postprocessing/BokehPass.js';\nimport EffectPass from './EffectPass.js';\n\nexport default {\n  extends: EffectPass,\n  props: {\n    focus: {\n      type: Number,\n      default: 1,\n    },\n    aperture: {\n      type: Number,\n      default: 0.025,\n    },\n    maxblur: {\n      type: Number,\n      default: 0.01,\n    },\n  },\n  watch: {\n    focus() { this.pass.uniforms.focus.value = this.focus; },\n    aperture() { this.pass.uniforms.aperture.value = this.aperture; },\n    maxblur() { this.pass.uniforms.maxblur.value = this.maxblur; },\n  },\n  mounted() {\n    if (!this.three.scene) {\n      console.error('Missing Scene');\n    }\n    if (!this.three.camera) {\n      console.error('Missing Camera');\n    }\n    const params = {\n      focus: this.focus,\n      aperture: this.aperture,\n      maxblur: this.maxblur,\n      width: this.three.size.width,\n      height: this.three.size.height,\n    };\n    const pass = new BokehPass(this.three.scene, this.three.camera, params);\n    this.passes.push(pass);\n    this.pass = pass;\n  },\n  __hmrId: 'BokehPass',\n};\n","import { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass.js';\nimport EffectPass from './EffectPass.js';\n\nexport default {\n  extends: EffectPass,\n  props: {\n    noiseIntensity: {\n      type: Number,\n      default: 0.5,\n    },\n    scanlinesIntensity: {\n      type: Number,\n      default: 0.05,\n    },\n    scanlinesCount: {\n      type: Number,\n      default: 4096,\n    },\n    grayscale: {\n      type: Number,\n      default: 0,\n    },\n  },\n  watch: {\n    noiseIntensity() { this.pass.uniforms.nIntensity.value = this.noiseIntensity; },\n    scanlinesIntensity() { this.pass.uniforms.sIntensity.value = this.scanlinesIntensity; },\n    scanlinesCount() { this.pass.uniforms.sCount.value = this.scanlinesCount; },\n    grayscale() { this.pass.uniforms.grayscale.value = this.grayscale; },\n  },\n  mounted() {\n    const pass = new FilmPass(this.noiseIntensity, this.scanlinesIntensity, this.scanlinesCount, this.grayscale);\n    this.passes.push(pass);\n    this.pass = pass;\n  },\n  __hmrId: 'FilmPass',\n};\n","import { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader.js';\nimport EffectPass from './EffectPass.js';\n\nexport default {\n  extends: EffectPass,\n  mounted() {\n    const pass = new ShaderPass(FXAAShader);\n    this.passes.push(pass);\n    this.pass = pass;\n\n    // resize will be called in three init\n    this.three.onAfterResize(this.resize);\n  },\n  unmounted() {\n    this.three.offAfterResize(this.resize);\n  },\n  methods: {\n    resize() {\n      const { resolution } = this.pass.material.uniforms;\n      resolution.value.x = 1 / this.three.size.width;\n      resolution.value.y = 1 / this.three.size.height;\n    },\n  },\n  __hmrId: 'FXAAPass',\n};\n","import { HalftonePass } from 'three/examples/jsm/postprocessing/HalftonePass.js';\nimport { watch } from 'vue';\nimport EffectPass from './EffectPass.js';\n\nexport default {\n  extends: EffectPass,\n  props: {\n    shape: { type: Number, default: 1 },\n    radius: { type: Number, default: 4 },\n    rotateR: { type: Number, default: Math.PI / 12 * 1 },\n    rotateG: { type: Number, default: Math.PI / 12 * 2 },\n    rotateB: { type: Number, default: Math.PI / 12 * 3 },\n    scatter: { type: Number, default: 0 },\n  },\n  mounted() {\n    const pass = new HalftonePass(this.three.size.width, this.three.size.height, {});\n\n    ['shape', 'radius', 'rotateR', 'rotateG', 'rotateB', 'scatter'].forEach(p => {\n      pass.uniforms[p].value = this[p];\n      watch(() => this[p], () => {\n        pass.uniforms[p].value = this[p];\n      });\n    });\n\n    this.passes.push(pass);\n    this.pass = pass;\n  },\n  __hmrId: 'HalftonePass',\n};\n","import { SMAAPass } from 'three/examples/jsm/postprocessing/SMAAPass.js';\nimport EffectPass from './EffectPass.js';\n\nexport default {\n  extends: EffectPass,\n  mounted() {\n    // three size is not set yet, but this pass will be resized by effect composer\n    const pass = new SMAAPass(this.three.size.width, this.three.size.height);\n    this.passes.push(pass);\n    this.pass = pass;\n  },\n  __hmrId: 'SMAAPass',\n};\n","export default {\n  uniforms: {},\n  vertexShader: `\n    varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  `,\n  fragmentShader: `\n    varying vec2 vUv;\n    void main() {\n      gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n    }\n  `,\n};\n","// From https://github.com/evanw/glfx.js\nimport { Vector2 } from 'three';\nimport DefaultShader from './default';\n\nexport default {\n  uniforms: {\n    tDiffuse: { value: null },\n    blurRadius: { value: 0 },\n    gradientRadius: { value: 0 },\n    start: { value: new Vector2() },\n    end: { value: new Vector2() },\n    delta: { value: new Vector2() },\n    texSize: { value: new Vector2() },\n  },\n  vertexShader: DefaultShader.vertexShader,\n  fragmentShader: `\n    uniform sampler2D tDiffuse;\n    uniform float blurRadius;\n    uniform float gradientRadius;\n    uniform vec2 start;\n    uniform vec2 end;\n    uniform vec2 delta;\n    uniform vec2 texSize;\n    varying vec2 vUv;\n\n    float random(vec3 scale, float seed) {\n      /* use the fragment position for a different seed per-pixel */\n      return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n    }\n\n    void main() {\n      vec4 color = vec4(0.0);\n      float total = 0.0;\n\n      /* randomize the lookup values to hide the fixed number of samples */\n      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n\n      vec2 normal = normalize(vec2(start.y - end.y, end.x - start.x));\n      float radius = smoothstep(0.0, 1.0, abs(dot(vUv * texSize - start, normal)) / gradientRadius) * blurRadius;\n      for (float t = -30.0; t <= 30.0; t++) {\n          float percent = (t + offset - 0.5) / 30.0;\n          float weight = 1.0 - abs(percent);\n          vec4 texel = texture2D(tDiffuse, vUv + delta / texSize * percent * radius);\n          // vec4 texel2 = texture2D(tDiffuse, vUv + vec2(-delta.y, delta.x) / texSize * percent * radius);\n\n          /* switch to pre-multiplied alpha to correctly blur transparent images */\n          texel.rgb *= texel.a;\n          // texel2.rgb *= texel2.a;\n\n          color += texel * weight;\n          total += 2.0 * weight;\n      }\n\n      gl_FragColor = color / total;\n\n      /* switch back from pre-multiplied alpha */\n      gl_FragColor.rgb /= gl_FragColor.a + 0.00001;\n    }\n  `,\n};\n","import { watch } from 'vue';\n\nexport default function useBindPropValue(src, srcProp, dst, dstProp = 'value') {\n  if (src[srcProp]) {\n    dst[dstProp] = src[srcProp];\n    watch(() => src[srcProp], (value) => {\n      dst[dstProp] = value;\n    });\n  }\n};\n","import { Vector2 } from 'three';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\nimport { watch } from 'vue';\nimport EffectPass from './EffectPass.js';\nimport TiltShift from '../shaders/TiltShift.js';\nimport useBindPropValue from '../use/useBindPropValue.js';\n\nexport default {\n  extends: EffectPass,\n  props: {\n    blurRadius: { type: Number, default: 10 },\n    gradientRadius: { type: Number, default: 100 },\n    start: { type: Object, default: { x: 0, y: 100 } },\n    end: { type: Object, default: { x: 10, y: 100 } },\n  },\n  mounted() {\n    this.pass = new ShaderPass(TiltShift);\n    this.passes.push(this.pass);\n\n    this.pass1 = new ShaderPass(TiltShift);\n    this.passes.push(this.pass1);\n\n    const uniforms = this.uniforms = this.pass.uniforms;\n    const uniforms1 = this.uniforms1 = this.pass1.uniforms;\n    uniforms1.blurRadius = uniforms.blurRadius;\n    uniforms1.gradientRadius = uniforms.gradientRadius;\n    uniforms1.start = uniforms.start;\n    uniforms1.end = uniforms.end;\n    uniforms1.texSize = uniforms.texSize;\n\n    useBindPropValue(this, 'blurRadius', uniforms.blurRadius);\n    useBindPropValue(this, 'gradientRadius', uniforms.gradientRadius);\n\n    this.updateFocusLine();\n    ['start', 'end'].forEach(p => {\n      watch(() => this[p], this.updateFocusLine);\n    });\n\n    this.pass.setSize = (width, height) => {\n      uniforms.texSize.value.set(width, height);\n    };\n  },\n  methods: {\n    updateFocusLine() {\n      this.uniforms.start.value.copy(this.start);\n      this.uniforms.end.value.copy(this.end);\n      const dv = new Vector2().copy(this.end).sub(this.start).normalize();\n      this.uniforms.delta.value.copy(dv);\n      this.uniforms1.delta.value.set(-dv.y, dv.x);\n    },\n  },\n  __hmrId: 'TiltShiftPass',\n};\n","import { Vector2 } from 'three';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js';\nimport EffectPass from './EffectPass.js';\n\nexport default {\n  extends: EffectPass,\n  props: {\n    strength: { type: Number, default: 1.5 },\n    radius: { type: Number, default: 0 },\n    threshold: { type: Number, default: 0 },\n  },\n  watch: {\n    strength() { this.pass.strength = this.strength; },\n    radius() { this.pass.radius = this.radius; },\n    threshold() { this.pass.threshold = this.threshold; },\n  },\n  mounted() {\n    const size = new Vector2(this.three.size.width, this.three.size.height);\n    const pass = new UnrealBloomPass(size, this.strength, this.radius, this.threshold);\n    this.passes.push(pass);\n    this.pass = pass;\n  },\n  __hmrId: 'UnrealBloomPass',\n};\n","// From https://github.com/evanw/glfx.js\nimport { Vector2 } from 'three';\nimport DefaultShader from './default';\n\nexport default {\n  uniforms: {\n    tDiffuse: { value: null },\n    center: { value: new Vector2(0.5, 0.5) },\n    strength: { value: 0 },\n  },\n  vertexShader: DefaultShader.vertexShader,\n  fragmentShader: `\n    uniform sampler2D tDiffuse;\n    uniform vec2 center;\n    uniform float strength;\n    varying vec2 vUv;\n\n    float random(vec3 scale, float seed) {\n      /* use the fragment position for a different seed per-pixel */\n      return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n    }\n    \n    void main() {\n      vec4 color = vec4(0.0);\n      float total = 0.0;\n      vec2 toCenter = center - vUv;\n      \n      /* randomize the lookup values to hide the fixed number of samples */\n      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n      \n      for (float t = 0.0; t <= 40.0; t++) {\n        float percent = (t + offset) / 40.0;\n        float weight = 4.0 * (percent - percent * percent);\n        vec4 texel = texture2D(tDiffuse, vUv + toCenter * percent * strength);\n\n        /* switch to pre-multiplied alpha to correctly blur transparent images */\n        texel.rgb *= texel.a;\n\n        color += texel * weight;\n        total += weight;\n      }\n\n      gl_FragColor = color / total;\n\n      /* switch back from pre-multiplied alpha */\n      gl_FragColor.rgb /= gl_FragColor.a + 0.00001;\n    }\n  `,\n};\n","import { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\nimport EffectPass from './EffectPass.js';\nimport ZoomBlur from '../shaders/ZoomBlur.js';\nimport useBindProp from '../use/useBindProp.js';\nimport useBindPropValue from '../use/useBindPropValue.js';\n\nexport default {\n  extends: EffectPass,\n  props: {\n    center: { type: Object, default: { x: 0.5, y: 0.5 } },\n    strength: { type: Number, default: 0.5 },\n  },\n  mounted() {\n    this.pass = new ShaderPass(ZoomBlur);\n    this.passes.push(this.pass);\n\n    const uniforms = this.uniforms = this.pass.uniforms;\n    useBindProp(this, 'center', uniforms.center.value);\n    useBindPropValue(this, 'strength', uniforms.strength);\n  },\n  __hmrId: 'ZoomBlurPass',\n};\n","import * as TROIS from './index.js';\n\nexport const TroisJSVuePlugin = {\n  install: (app) => {\n    const comps = [\n      'Camera',\n      'OrthographicCamera',\n      'PerspectiveCamera',\n      'Renderer',\n      'Scene',\n      'Group',\n\n      'BoxGeometry',\n      'CircleGeometry',\n      'ConeGeometry',\n      'CylinderGeometry',\n      'DodecahedronGeometry',\n      'IcosahedronGeometry',\n      'LatheGeometry',\n      'OctahedronGeometry',\n      'PolyhedronGeometry',\n      'RingGeometry',\n      'SphereGeometry',\n      'TetrahedronGeometry',\n      'TorusGeometry',\n      'TorusKnotGeometry',\n      'TubeGeometry',\n\n      'AmbientLight',\n      'DirectionalLight',\n      'PointLight',\n      'SpotLight',\n\n      'BasicMaterial',\n      'LambertMaterial',\n      'MatcapMaterial',\n      'PhongMaterial',\n      'PhysicalMaterial',\n      'ShaderMaterial',\n      'StandardMaterial',\n      'SubSurfaceMaterial',\n      'ToonMaterial',\n\n      'Texture',\n      'CubeTexture',\n\n      'Box',\n      'Circle',\n      'Cone',\n      'Cylinder',\n      'Dodecahedron',\n      'Icosahedron',\n      'Mesh',\n      'Lathe',\n      'Octahedron',\n      'Plane',\n      'Polyhedron',\n      'Ring',\n      'Sphere',\n      'Tetrahedron',\n      'Text',\n      'Torus',\n      'TorusKnot',\n      'Tube',\n\n      'Gem',\n      'Image',\n      'InstancedMesh',\n      'MirrorMesh',\n      'RefractionMesh',\n      'Sprite',\n\n      'BokehPass',\n      'EffectComposer',\n      'FilmPass',\n      'FXAAPass',\n      'HalftonePass',\n      'RenderPass',\n      'SAOPass',\n      'SMAAPass',\n      'TiltShiftPass',\n      'UnrealBloomPass',\n      'ZoomBlurPass',\n\n      'GLTFViewer',\n    ];\n\n    comps.forEach(comp => {\n      app.component(comp, TROIS[comp]);\n    });\n  },\n};\n"],"names":["useThree","const","conf","canvas","antialias","alpha","autoClear","orbit_ctrl","mouse_move","mouse_raycast","mouse_over","click","resize","width","height","size","wWidth","wHeight","ratio","afterInitCallbacks","afterResizeCallbacks","beforeRenderCallbacks","mouse","Vector2","mouseV3","Vector3","mousePlane","Plane","raycaster","Raycaster","intersectObjects","obj","renderer","camera","cameraCtrl","materials","scene","params","Object","entries","forEach","key","value","console","error","WebGLRenderer","orbitCtrl","OrbitControls","domElement","setSize","onResize","window","addEventListener","mouse_move_element","document","body","onMousemove","onMouseleave","onClick","c","removeEventListener","dispose","this","update","render","composer","callback","push","filter","o","indexOf","i","splice","updateMouse","e","rect","target","getBoundingClientRect","x","clientX","left","y","clientY","top","setFromCamera","objects","length","object","onMousechange","getWorldDirection","normal","normalize","ray","intersectPlane","onObjects","offObjects","hover","onHover","let","innerWidth","innerHeight","elt","parentNode","clientWidth","clientHeight","aspect","updateProjectionMatrix","type","right","bottom","wsize","vFOV","fov","Math","PI","h","tan","abs","position","z","getCameraSize","props","Boolean","default","mouseMove","String","mouseRaycast","mouseOver","shadow","setup","three","raf","onMountedCallbacks","provide","rendererComponent","mounted","$el","init","shadowMap","enabled","animateC","animate","beforeUnmount","methods","onMounted","onBeforeRender","onAfterResize","requestAnimationFrame","renderC","$slots","setFromProp","prop","propsValues","exclude","values","includes","lerp","value1","value2","amount","lerpv2","v1","v2","lerpv3","limit","val","min","max","getMatcapUrl","hash","format","MATCAP_ROOT","useBindProp","comp","ref","toRef","watch","deep","inject","Number","near","far","zoom","created","OrthographicCamera","p","__hmrId","PerspectiveCamera","group","rotation","scale","parent","Group","add","unmounted","remove","id","background","Scene","Color","emits","rotateX","rotateY","rotateZ","mesh","watchProps","$props","beforeMount","createGeometry","rotateGeometry","setGeometry","geometry","addWatchers","refreshGeometry","oldGeo","extends","Geometry","depth","widthSegments","heightSegments","depthSegments","w","d","BoxBufferGeometry","radius","segments","thetaStart","thetaLength","CircleBufferGeometry","radialSegments","openEnded","ConeBufferGeometry","radiusTop","radiusBottom","CylinderBufferGeometry","detail","DodecahedronBufferGeometry","IcosahedronBufferGeometry","points","Array","phiStart","phiLength","LatheBufferGeometry","OctahedronBufferGeometry","vertices","indices","PolyhedronBufferGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","SphereBufferGeometry","TetrahedronBufferGeometry","tube","tubularSegments","arc","TorusBufferGeometry","q","TorusKnotBufferGeometry","path","Curve","radiusSegments","closed","TubeBufferGeometry","color","intensity","castShadow","shadowMapSize","light","mapSize","Light","AmbientLight","DirectionalLight","distance","decay","PointLight","angle","penumbra","SpotLight","depthTest","depthWrite","flatShading","fog","opacity","side","FrontSide","transparent","vertexColors","material","createMaterial","setMaterial","_addWatchers","setProp","needsUpdate","setTexture","texture","set","Material","MeshBasicMaterial","MeshLambertMaterial","src","name","opts","matcap","TextureLoader","load","MeshMatcapMaterial","emissive","emissiveIntensity","reflectivity","shininess","specular","MeshPhongMaterial","aoMapIntensity","bumpScale","displacementBias","displacementScale","envMapIntensity","lightMapIntensity","metalness","normalScale","roughness","refractionRatio","wireframe","MeshStandardMaterial","keys","StandardMaterial","MeshPhysicalMaterial","string","find","replace","meshphongFragHead","ShaderChunk","meshphong_frag","slice","meshphongFragBody","SubsurfaceScatteringShader","uniforms","UniformsUtils","merge","ShaderLib","phong","thicknessColor","thicknessDistortion","thicknessAmbient","thicknessAttenuation","thicknessPower","thicknessScale","vertexShader","fragmentShader","lights_fragment_begin","split","join","clone","_key","_value","TShaderMaterial","lights","MeshToonMaterial","onLoad","Function","onProgress","onError","refreshTexture","createTexture","onLoaded","$emit","urls","refraction","CubeTextureLoader","setPath","mapping","CubeRefractionMapping","materialId","receiveShadow","initMesh","removeIntersectObject","Mesh","over","component","addIntersectObject","event","bindProps","PlaneBufferGeometry","text","fontSrc","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","align","TextProps","font","FontLoader","TextBufferGeometry","center","cubeRTSize","cubeCameraNear","cubeCameraFar","autoUpdate","initGem","updateCubeRT","offBeforeRender","meshBack","materialBack","cubeRT","WebGLCubeRenderTarget","RGBFormat","generateMipmaps","minFilter","LinearMipmapLinearFilter","cubeCamera","CubeCamera","envMap","premultipliedAlpha","BackSide","TMesh","visible","keepSize","DoubleSide","map","loadTexture","screen","iRatio","image","count","InstancedMesh","initMirrorMesh","SpriteMaterial","sprite","Sprite","updateUV","iWidth","iHeight","positions","attributes","array","passes","onAfterInit","EffectComposer","pass","addPass","offAfterResize","EffectPass","RenderPass","focus","aperture","maxblur","BokehPass","noiseIntensity","scanlinesIntensity","scanlinesCount","grayscale","nIntensity","sIntensity","sCount","FilmPass","ShaderPass","FXAAShader","resolution","shape","rotateR","rotateG","rotateB","scatter","HalftonePass","SMAAPass","tDiffuse","blurRadius","gradientRadius","start","end","delta","texSize","DefaultShader","useBindPropValue","srcProp","dst","dstProp","TiltShift","pass1","uniforms1","updateFocusLine","copy","dv","sub","strength","threshold","UnrealBloomPass","ZoomBlur","TroisJSVuePlugin","install","app","TROIS"],"mappings":"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"}